{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js\";\nimport React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport const filterRadios = Object.values(FILTER_STATUS);\nexport class TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddChange = event => {\n      event.preventDefault();\n      this.setState({\n        currentNewTitle: event.target.value\n      });\n    };\n\n    this.handleAddSubmit = event => {\n      event.preventDefault();\n      this.setState(state => ({\n        todos: [...state.todos, {\n          id: this.state.newId,\n          title: this.state.currentNewTitle,\n          completed: false,\n          editing: false\n        }],\n        newId: state.newId + 1,\n        currentNewTitle: \"\"\n      }));\n    };\n\n    this.handleEditEnter = (currentValue, id) => {\n      if (currentValue !== \"\") {\n        this.setState(state => {\n          const todos = state.todos.map(todo => {\n            return { ...todo,\n              title: todo.id === id ? currentValue : todo.title\n            };\n          });\n          return {\n            todos\n          };\n        });\n      }\n    };\n\n    this.isAllCompleted = state => {\n      return state.todos.filter(todo => !todo.completed).length === 0;\n    };\n\n    this.handleToggleAllItems = () => {\n      this.setState(state => {\n        const todos = state.todos.map(todo => {\n          return { ...todo,\n            completed: state.todos.filter(todo => !todo.completed).length === 0 ? false : true\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n      this.setState(state => {\n        const todos = state.todos.map(todo => {\n          return { ...todo,\n            completed: todo.id === id ? !currentCompletedStatus : todo.completed\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.handleItemDelete = id => {\n      this.setState(state => ({\n        todos: state.todos.filter(todo => todo.id !== id)\n      }));\n    };\n\n    this.handleTodosByFilterKey = filterKey => {\n      const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n      return filterKey === FILTER_STATUS.ALL ? this.state.todos : this.state.todos.filter(todo => todo.completed === isFilterCompleted);\n    };\n\n    this.handleChangeFilterKey = filterRadio => {\n      this.setState({\n        filterKey: filterRadio\n      });\n    };\n\n    this.needClear = state => {\n      return state.todos.filter(todo => todo.completed).length > 0;\n    };\n\n    this.clearCompleted = () => {\n      this.setState(state => {\n        const todos = state.todos.filter(todo => !todo.completed);\n        return {\n          todos\n        };\n      });\n    };\n\n    this.state = {\n      newId: 3,\n      currentNewTitle: \"\",\n      filterKey: FILTER_STATUS.ALL,\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n  }\n\n  filterButtonClass(filterRadio) {\n    return this.state.filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  }\n\n  buildCheckIcon() {\n    const className = this.isAllCompleted(this.state) ? \"fas fa-check\" : \"far fa-circle\";\n    return (\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 12\n        }\n      })\n    );\n  }\n\n  render() {\n    const CLEAR_BUTTON = \"clear completed\";\n    const notAllItemInfo = this.state.filterKey === FILTER_STATUS.ALL ? \"\" : `${this.state.filterKey} items:${this.handleTodosByFilterKey(this.state.filterKey).length}`;\n    const itemInfo = `${FILTER_STATUS.ALL} items:${this.state.todos.length} ${notAllItemInfo}`;\n    const showClearButton = {\n      visibility: this.needClear(this.state) ? \"visible\" : \"hidden\"\n    };\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"todo-list-frame\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        className: \"add-item-area\",\n        onSubmit: this.handleAddSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"tick-label\",\n        onClick: this.handleToggleAllItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, this.buildCheckIcon()),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        className: \"add-item-input\",\n        value: this.state.currentNewTitle,\n        onChange: this.handleAddChange,\n        placeholder: \"enter to add a todo list\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      })), this.handleTodosByFilterKey(this.state.filterKey).map(todo =>\n      /*#__PURE__*/\n      React.createElement(TodoItem, {\n        key: todo.id,\n        todo: todo,\n        handleItemDelete: () => this.handleItemDelete(todo.id),\n        handleEditEnter: this.handleEditEnter,\n        handleChangeCompletedStatus: () => this.handleChangeCompletedStatus(todo.completed, todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"filter-item-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"remaining-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, itemInfo),\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"filter-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, filterRadios.map((filterRadio, index) =>\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        className: this.filterButtonClass(filterRadio),\n        key: index,\n        value: filterRadio,\n        onClick: () => this.handleChangeFilterKey(filterRadio),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }\n      }, filterRadio))),\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"clear-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        className: \"clear-li\",\n        style: showClearButton,\n        onClick: this.clearCompleted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, CLEAR_BUTTON))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js"],"names":["React","TodoItem","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","filterRadios","Object","values","TodoList","Component","constructor","props","handleAddChange","event","preventDefault","setState","currentNewTitle","target","value","handleAddSubmit","state","todos","id","newId","title","completed","editing","handleEditEnter","currentValue","map","todo","isAllCompleted","filter","length","handleToggleAllItems","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","handleTodosByFilterKey","filterKey","isFilterCompleted","handleChangeFilterKey","filterRadio","needClear","clearCompleted","filterButtonClass","buildCheckIcon","className","render","CLEAR_BUTTON","notAllItemInfo","itemInfo","showClearButton","visibility","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\n\nexport const filterRadios = Object.values(FILTER_STATUS);\n\nexport class TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newId: 3,\n      currentNewTitle: \"\",\n      filterKey: FILTER_STATUS.ALL,\n      todos: [\n        {\n          id: 1,\n          title: \"this is \bthe first example, double click to edit it\",\n          completed: false,\n          editing: false\n        },\n        {\n          id: 2,\n          title: \"this is \bthe second example, double click to edit it\",\n          completed: false,\n          editing: false\n        }\n      ]\n    };\n  }\n\n  handleAddChange = event => {\n    event.preventDefault();\n    this.setState({ currentNewTitle: event.target.value });\n  };\n\n  handleAddSubmit = event => {\n    event.preventDefault();\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: this.state.newId,\n          title: this.state.currentNewTitle,\n          completed: false,\n          editing: false\n        }\n      ],\n      newId: state.newId + 1,\n      currentNewTitle: \"\"\n    }));\n  };\n\n  handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      this.setState(state => {\n        const todos = state.todos.map(todo => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        });\n        return { todos };\n      });\n    }\n  };\n\n  isAllCompleted = state => {\n    return state.todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  handleToggleAllItems = () => {\n    this.setState(state => {\n      const todos = state.todos.map(todo => {\n        return {\n          ...todo,\n          completed:\n            state.todos.filter(todo => !todo.completed).length === 0\n              ? false\n              : true\n        };\n      });\n      return { todos };\n    });\n  };\n\n  handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n    this.setState(state => {\n      const todos = state.todos.map(todo => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed\n        };\n      });\n      return { todos };\n    });\n  };\n\n  handleItemDelete = id => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id)\n    }));\n  };\n\n  handleTodosByFilterKey = filterKey => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? this.state.todos\n      : this.state.todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  handleChangeFilterKey = filterRadio => {\n    this.setState({ filterKey: filterRadio });\n  };\n\n  needClear = state => {\n    return state.todos.filter(todo => todo.completed).length > 0;\n  };\n\n  clearCompleted = () => {\n    this.setState(state => {\n      const todos = state.todos.filter(todo => !todo.completed);\n      return { todos };\n    });\n  };\n\n  filterButtonClass(filterRadio) {\n    return this.state.filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  }\n\n  buildCheckIcon() {\n    const className = this.isAllCompleted(this.state)\n      ? \"fas fa-check\"\n      : \"far fa-circle\";\n    return <i className={className}></i>;\n  }\n\n  render() {\n    const CLEAR_BUTTON = \"clear completed\";\n    const notAllItemInfo =\n      this.state.filterKey === FILTER_STATUS.ALL\n        ? \"\"\n        : `${this.state.filterKey} items:${\n            this.handleTodosByFilterKey(this.state.filterKey).length\n          }`;\n    const itemInfo = `${FILTER_STATUS.ALL} items:${this.state.todos.length} ${notAllItemInfo}`;\n    const showClearButton = {\n      visibility: this.needClear(this.state) ? \"visible\" : \"hidden\"\n    };\n    return (\n      <div className=\"todo-list-frame\">\n        <form className=\"add-item-area\" onSubmit={this.handleAddSubmit}>\n          <label className=\"tick-label\" onClick={this.handleToggleAllItems}>\n            {this.buildCheckIcon()}\n          </label>\n          <input\n            type=\"text\"\n            className=\"add-item-input\"\n            value={this.state.currentNewTitle}\n            onChange={this.handleAddChange}\n            placeholder=\"enter to add a todo list\"\n            required\n          />\n        </form>\n        {this.handleTodosByFilterKey(this.state.filterKey).map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleItemDelete={() => this.handleItemDelete(todo.id)}\n            handleEditEnter={this.handleEditEnter}\n            handleChangeCompletedStatus={() =>\n              this.handleChangeCompletedStatus(todo.completed, todo.id)\n            }\n          />\n        ))}\n        <div className=\"filter-item-area\">\n          <span className=\"remaining-span\">{itemInfo}</span>\n          <span className=\"filter-span\">\n            {filterRadios.map((filterRadio, index) => (\n              <li\n                className={this.filterButtonClass(filterRadio)}\n                key={index}\n                value={filterRadio}\n                onClick={() => this.handleChangeFilterKey(filterRadio)}\n              >\n                {filterRadio}\n              </li>\n            ))}\n          </span>\n          <span className=\"clear-span\">\n            <li\n              className=\"clear-li\"\n              style={showClearButton}\n              onClick={this.clearCompleted}\n            >\n              {CLEAR_BUTTON}\n            </li>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}