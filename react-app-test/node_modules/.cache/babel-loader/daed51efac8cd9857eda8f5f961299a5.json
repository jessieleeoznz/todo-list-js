{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/react-app-test/src/TodoList.js\";\nimport React, { Component } from 'react';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newId: 3,\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n  }\n\n  handleAddTodo(e) {\n    if (e.which === 13) {\n      this.setState(state => {\n        state.todos.push({\n          id: state.newId,\n          title: e.target.value,\n          completed: false,\n          editing: false\n        });\n      });\n    }\n  }\n\n  render() {\n    const todoList = this.state.todos.map(todo => React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, todo.title));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      on: \"handleAddTodo\",\n      placeholder: \"input here to add a todo-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", todoList, \" \"));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jessie/workspace/react-app-test/src/TodoList.js"],"names":["React","Component","TodoList","constructor","props","state","newId","todos","id","title","completed","editing","handleAddTodo","e","which","setState","push","target","value","render","todoList","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,qDAFX;AAGIC,QAAAA,SAAS,EAAE,KAHf;AAIIC,QAAAA,OAAO,EAAE;AAJb,OADG,EAOH;AACIH,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,sDAFX;AAGIC,QAAAA,SAAS,EAAE,KAHf;AAIIC,QAAAA,OAAO,EAAE;AAJb,OAPG;AAFE,KAAb;AAiBH;;AAEDC,EAAAA,aAAa,CAACC,CAAD,EAAI;AACb,QAAIA,CAAC,CAACC,KAAF,KAAY,EAAhB,EAAoB;AAChB,WAAKC,QAAL,CAAcV,KAAK,IAAI;AACnBA,QAAAA,KAAK,CAACE,KAAN,CAAYS,IAAZ,CAAiB;AACbR,UAAAA,EAAE,EAAEH,KAAK,CAACC,KADG;AAEbG,UAAAA,KAAK,EAAEI,CAAC,CAACI,MAAF,CAASC,KAFH;AAGbR,UAAAA,SAAS,EAAE,KAHE;AAIbC,UAAAA,OAAO,EAAE;AAJI,SAAjB;AAMH,OAPD;AAQH;AACJ;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKf,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAsBC,IAAD,IAAU;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACd,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBc,IAAI,CAACb,KAAxB,CAA/B,CAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,eAAV;AAA0B,MAAA,WAAW,EAAC,+BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASW,QAAT,MAFJ,CADJ;AAMH;;AA5C4B;;AA+CjC,eAAelB,QAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newId: 3,\n            todos: [\n                {\n                    id: 1,\n                    title: \"this is \bthe first example, double click to edit it\",\n                    completed: false,\n                    editing: false,\n                },\n                {\n                    id: 2,\n                    title: \"this is \bthe second example, double click to edit it\",\n                    completed: false,\n                    editing: false,\n                },\n            ]\n        };\n    }\n\n    handleAddTodo(e) {\n        if (e.which === 13) {\n            this.setState(state => {\n                state.todos.push({\n                    id: state.newId,\n                    title: e.target.value,\n                    completed: false,\n                    editing: false\n                });\n            })\n        }\n    };\n\n    render() {\n        const todoList = this.state.todos.map((todo) => <li key={todo.id}>{todo.title}</li>);\n\n        return (\n            <div>\n                <input on=\"handleAddTodo\" placeholder=\"input here to add a todo-item\" />\n                <label> {todoList} </label>\n            </div>\n        )\n    }\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}