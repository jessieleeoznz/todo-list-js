{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/FilterClearItemsArea.js\";\nimport React from \"react\";\nimport { FILTER_STATUS } from \"./TodoListApp\";\nexport function FilterClearItemsArea(props) {\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"filter-item-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(RemainingInfoSpan, {\n      filterKey: props.filterKey,\n      getTodosByFilterKey: props.getTodosByFilterKey,\n      todos: props.todos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FilterRadioSpan, {\n      filterKey: props.filterKey,\n      handleChangeFilterKey: props.handleChangeFilterKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(ClearButtonSpan, {\n      todos: props.todos,\n      handleClearCompleted: props.handleClearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nfunction RemainingInfoSpan(props) {\n  const notAllItemInfo = props.filterKey === FILTER_STATUS.ALL ? \"\" : `${props.filterKey} items:${props.getTodosByFilterKey().length}`;\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${props.todos.length} ${notAllItemInfo}`;\n  return (\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"remaining-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }\n    }, jointedItemInfo)\n  );\n}\n\nfunction FilterRadioSpan(props) {\n  const filterRadios = Object.values(FILTER_STATUS);\n\n  const getButtonStyleByFilterKey = filterRadio => {\n    return props.filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"filter-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, filterRadios.map((filterRadio, index) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: getButtonStyleByFilterKey(filterRadio),\n      key: index,\n      value: filterRadio,\n      onClick: () => props.handleChangeFilterKey(filterRadio),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, filterRadio)))\n  );\n}\n\nfunction ClearButtonSpan(props) {\n  const CLEAR_BUTTON = \"clear completed\";\n\n  const isNeededClear = () => {\n    return props.todos.filter(todo => todo.completed).length > 0;\n  };\n\n  const showClearButton = {\n    visibility: isNeededClear() ? \"visible\" : \"hidden\"\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"clear-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"clear-li\",\n      style: showClearButton,\n      onClick: () => props.handleClearCompleted(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, CLEAR_BUTTON))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/FilterClearItemsArea.js"],"names":["React","FILTER_STATUS","FilterClearItemsArea","props","filterKey","getTodosByFilterKey","todos","handleChangeFilterKey","handleClearCompleted","RemainingInfoSpan","notAllItemInfo","ALL","length","jointedItemInfo","FilterRadioSpan","filterRadios","Object","values","getButtonStyleByFilterKey","filterRadio","map","index","ClearButtonSpan","CLEAR_BUTTON","isNeededClear","filter","todo","completed","showClearButton","visibility"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C;AAAA;AACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,iBAAD;AACE,MAAA,SAAS,EAAEA,KAAK,CAACC,SADnB;AAEE,MAAA,mBAAmB,EAAED,KAAK,CAACE,mBAF7B;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAAA;AAME,wBAAC,eAAD;AACE,MAAA,SAAS,EAAEH,KAAK,CAACC,SADnB;AAEE,MAAA,qBAAqB,EAAED,KAAK,CAACI,qBAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF;AAAA;AAUE,wBAAC,eAAD;AACE,MAAA,KAAK,EAAEJ,KAAK,CAACG,KADf;AAEE,MAAA,oBAAoB,EAAEH,KAAK,CAACK,oBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF;AADF;AAiBD;;AAED,SAASC,iBAAT,CAA2BN,KAA3B,EAAkC;AAChC,QAAMO,cAAc,GAClBP,KAAK,CAACC,SAAN,KAAoBH,aAAa,CAACU,GAAlC,GACI,EADJ,GAEK,GAAER,KAAK,CAACC,SAAU,UAASD,KAAK,CAACE,mBAAN,GAA4BO,MAAO,EAHrE;AAKA,QAAMC,eAAe,GAAI,GAAEZ,aAAa,CAACU,GAAI,UAASR,KAAK,CAACG,KAAN,CAAYM,MAAO,IAAGF,cAAe,EAA3F;AAEA;AAAA;AAAO;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCG,eAAlC;AAAP;AACD;;AAED,SAASC,eAAT,CAAyBX,KAAzB,EAAgC;AAC9B,QAAMY,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAchB,aAAd,CAArB;;AAEA,QAAMiB,yBAAyB,GAAIC,WAAD,IAAiB;AACjD,WAAOhB,KAAK,CAACC,SAAN,KAAoBe,WAApB,GAAkC,UAAlC,GAA+C,WAAtD;AACD,GAFD;;AAIA;AAAA;AACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,YAAY,CAACK,GAAb,CAAiB,CAACD,WAAD,EAAcE,KAAd;AAAA;AAChB;AACE,MAAA,SAAS,EAAEH,yBAAyB,CAACC,WAAD,CADtC;AAEE,MAAA,GAAG,EAAEE,KAFP;AAGE,MAAA,KAAK,EAAEF,WAHT;AAIE,MAAA,OAAO,EAAE,MAAMhB,KAAK,CAACI,qBAAN,CAA4BY,WAA5B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGA,WANH,CADD,CADH;AADF;AAcD;;AAED,SAASG,eAAT,CAAyBnB,KAAzB,EAAgC;AAC9B,QAAMoB,YAAY,GAAG,iBAArB;;AAEA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOrB,KAAK,CAACG,KAAN,CAAYmB,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,SAAlC,EAA6Cf,MAA7C,GAAsD,CAA7D;AACD,GAFD;;AAIA,QAAMgB,eAAe,GAAG;AACtBC,IAAAA,UAAU,EAAEL,aAAa,KAAK,SAAL,GAAiB;AADpB,GAAxB;AAIA;AAAA;AACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,KAAK,EAAEI,eAFT;AAGE,MAAA,OAAO,EAAE,MAAMzB,KAAK,CAACK,oBAAN,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGe,YALH,CADF;AADF;AAWD","sourcesContent":["import React from \"react\";\nimport { FILTER_STATUS } from \"./TodoListApp\";\n\nexport function FilterClearItemsArea(props) {\n  return (\n    <div className=\"filter-item-area\">\n      <RemainingInfoSpan\n        filterKey={props.filterKey}\n        getTodosByFilterKey={props.getTodosByFilterKey}\n        todos={props.todos}\n      />\n      <FilterRadioSpan\n        filterKey={props.filterKey}\n        handleChangeFilterKey={props.handleChangeFilterKey}\n      />\n      <ClearButtonSpan\n        todos={props.todos}\n        handleClearCompleted={props.handleClearCompleted}\n      />\n    </div>\n  );\n}\n\nfunction RemainingInfoSpan(props) {\n  const notAllItemInfo =\n    props.filterKey === FILTER_STATUS.ALL\n      ? \"\"\n      : `${props.filterKey} items:${props.getTodosByFilterKey().length}`;\n\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${props.todos.length} ${notAllItemInfo}`;\n\n  return <span className=\"remaining-span\">{jointedItemInfo}</span>;\n}\n\nfunction FilterRadioSpan(props) {\n  const filterRadios = Object.values(FILTER_STATUS);\n\n  const getButtonStyleByFilterKey = (filterRadio) => {\n    return props.filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  return (\n    <span className=\"filter-span\">\n      {filterRadios.map((filterRadio, index) => (\n        <li\n          className={getButtonStyleByFilterKey(filterRadio)}\n          key={index}\n          value={filterRadio}\n          onClick={() => props.handleChangeFilterKey(filterRadio)}\n        >\n          {filterRadio}\n        </li>\n      ))}\n    </span>\n  );\n}\n\nfunction ClearButtonSpan(props) {\n  const CLEAR_BUTTON = \"clear completed\";\n\n  const isNeededClear = () => {\n    return props.todos.filter((todo) => todo.completed).length > 0;\n  };\n\n  const showClearButton = {\n    visibility: isNeededClear() ? \"visible\" : \"hidden\",\n  };\n\n  return (\n    <span className=\"clear-span\">\n      <li\n        className=\"clear-li\"\n        style={showClearButton}\n        onClick={() => props.handleClearCompleted()}\n      >\n        {CLEAR_BUTTON}\n      </li>\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}