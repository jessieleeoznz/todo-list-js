{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/react-app-test/src/TodoList.js\";\nimport React, { Component } from 'react';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newId: 3,\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n    this.handleAddTodo = this.handleAddTodo.bind(this);\n  }\n\n  handleAddTodo(event) {\n    // if (event.keyCode !== 13) {\n    //     return;\n    // }\n    // else {\n    this.setState(state => {\n      this.state.todos.push({\n        id: state.newId,\n        title: test,\n        completed: false,\n        editing: false\n      });\n    }); // }\n  }\n\n  render() {\n    const todoList = this.state.todos.map(todo => React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, todo.title));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onKeyPress: event => this.handleAddTodo(event),\n      placeholder: \"input here to add a todo-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" \", todoList, \" \"));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jessie/workspace/react-app-test/src/TodoList.js"],"names":["React","Component","TodoList","constructor","props","state","newId","todos","id","title","completed","editing","handleAddTodo","bind","event","setState","push","test","render","todoList","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,CADE;AAETC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,qDAFX;AAGIC,QAAAA,SAAS,EAAE,KAHf;AAIIC,QAAAA,OAAO,EAAE;AAJb,OADG,EAOH;AACIH,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,KAAK,EAAE,sDAFX;AAGIC,QAAAA,SAAS,EAAE,KAHf;AAIIC,QAAAA,OAAO,EAAE;AAJb,OAPG;AAFE,KAAb;AAiBA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,CAACE,KAAD,EAAQ;AACjB;AACA;AACA;AACA;AACA,SAAKC,QAAL,CAAeV,KAAD,IAAW;AACrB,WAAKA,KAAL,CAAWE,KAAX,CAAiBS,IAAjB,CAAsB;AAClBR,QAAAA,EAAE,EAAEH,KAAK,CAACC,KADQ;AAElBG,QAAAA,KAAK,EAAEQ,IAFW;AAGlBP,QAAAA,SAAS,EAAE,KAHO;AAIlBC,QAAAA,OAAO,EAAE;AAJS,OAAtB;AAMH,KAPD,EALiB,CAajB;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKd,KAAL,CAAWE,KAAX,CAAiBa,GAAjB,CAAsBC,IAAD,IAAU;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACb,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBa,IAAI,CAACZ,KAAxB,CAA/B,CAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,UAAU,EAAGK,KAAD,IAAW,KAAKF,aAAL,CAAmBE,KAAnB,CAA9B;AAAyD,MAAA,WAAW,EAAC,+BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAASK,QAAT,MAFJ,CADJ;AAMH;;AAhD4B;;AAmDjC,eAAejB,QAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newId: 3,\n            todos: [\n                {\n                    id: 1,\n                    title: \"this is \bthe first example, double click to edit it\",\n                    completed: false,\n                    editing: false,\n                },\n                {\n                    id: 2,\n                    title: \"this is \bthe second example, double click to edit it\",\n                    completed: false,\n                    editing: false,\n                },\n            ]\n        };\n        this.handleAddTodo = this.handleAddTodo.bind(this);\n    }\n\n    handleAddTodo(event) {\n        // if (event.keyCode !== 13) {\n        //     return;\n        // }\n        // else {\n        this.setState((state) => {\n            this.state.todos.push({\n                id: state.newId,\n                title: test,\n                completed: false,\n                editing: false\n            })\n        })\n        // }\n    };\n\n    render() {\n        const todoList = this.state.todos.map((todo) => <li key={todo.id}>{todo.title}</li>);\n\n        return (\n            <div>\n                <input onKeyPress={(event) => this.handleAddTodo(event)} placeholder=\"input here to add a todo-item\" />\n                <label> {todoList} </label>\n            </div>\n        )\n    }\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}