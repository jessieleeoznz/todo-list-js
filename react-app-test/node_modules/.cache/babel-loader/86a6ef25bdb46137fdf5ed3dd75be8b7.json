{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js\";\nimport React, { useState } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport const filterRadios = Object.values(FILTER_STATUS);\nexport function TodoList() {\n  const CLEAR_BUTTON = \"clear completed\";\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: \"this is \bthe first example, double click to edit it\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"this is \bthe second example, double click to edit it\",\n    completed: false\n  }]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(todos.map(todo => {\n        return { ...todo,\n          title: todo.id === id ? currentValue : todo.title\n        };\n      }));\n    }\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(todos.map(todo => {\n      return { ...todo,\n        completed: !isAllCompletedResult\n      };\n    }));\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => setTodos(todos.map(todo => {\n    return { ...todo,\n      completed: todo.id === id ? !currentCompletedStatus : todo.completed\n    };\n  }));\n\n  const handleItemDelete = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const getButtonStyleByFilterKey = filterRadio => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = filterRadio => setFilterKey(filterRadio);\n\n  const getTodosByFilterKey = filterKey => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? todos : todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  const isNeededClear = () => {\n    return todos.filter(todo => todo.completed).length > 0;\n  };\n\n  const handleClearCompleted = () => setTodos(todos.filter(todo => !todo.completed));\n\n  const notAllItemInfo = filterKey === FILTER_STATUS.ALL ? \"\" : `${filterKey} items:${getTodosByFilterKey(filterKey).length}`;\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${todos.length} ${notAllItemInfo}`;\n  const showClearButton = {\n    visibility: isNeededClear ? \"visible\" : \"hidden\"\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(AddItem, {\n      isAllCompleted: isAllCompleted,\n      handleAddSubmit: handleAddSubmit,\n      handleToggleAllItems: handleToggleAllItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }), getTodosByFilterKey(filterKey).map(todo =>\n    /*#__PURE__*/\n    React.createElement(TodoItem, {\n      key: todo.id,\n      todo: todo,\n      handleItemDelete: handleItemDelete,\n      handleEditEnter: handleEditEnter,\n      handleChangeCompletedStatus: handleChangeCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"filter-item-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"remaining-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, jointedItemInfo),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"filter-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, filterRadios.map((filterRadio, index) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: getButtonStyleByFilterKey(filterRadio),\n      key: index,\n      value: filterRadio,\n      onClick: () => handleChangeFilterKey(filterRadio),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, filterRadio))),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"clear-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"clear-li\",\n      style: showClearButton,\n      onClick: () => handleClearCompleted(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, CLEAR_BUTTON))))\n  );\n}\n\nfunction AddItem(props) {\n  const [newId, setNewId] = useState(3);\n  const [currentNewTitle, setCurrentNewTitle] = useState(\"\");\n\n  const handleAddChange = e => {\n    e.preventDefault();\n    setCurrentNewTitle(e.target.value);\n  };\n\n  const getCheckIcon = () => {\n    const className = props.isAllCompleted() ? \"fas fa-check\" : \"far fa-circle\";\n    return (\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 12\n        }\n      })\n    );\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      className: \"add-item-area\",\n      onSubmit: e => props.handleAddSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"tick-label\",\n      onClick: () => handleToggleAllItems(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, getCheckIcon()),\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      type: \"text\",\n      className: \"add-item-input\",\n      value: currentNewTitle,\n      onChange: e => handleAddChange(e),\n      placeholder: \"enter to add a todo list\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js"],"names":["React","useState","TodoItem","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","filterRadios","Object","values","TodoList","CLEAR_BUTTON","filterKey","setFilterKey","todos","setTodos","id","title","completed","handleEditEnter","currentValue","map","todo","isAllCompleted","filter","length","handleToggleAllItems","isAllCompletedResult","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","getButtonStyleByFilterKey","filterRadio","handleChangeFilterKey","getTodosByFilterKey","isFilterCompleted","isNeededClear","handleClearCompleted","notAllItemInfo","jointedItemInfo","showClearButton","visibility","handleAddSubmit","index","AddItem","props","newId","setNewId","currentNewTitle","setCurrentNewTitle","handleAddChange","e","preventDefault","target","value","getCheckIcon","className"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,WAAW,EAAE,aAFc;AAG3BC,EAAAA,SAAS,EAAE;AAHgB,CAAtB;AAMP,OAAO,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcN,aAAd,CAArB;AAEP,OAAO,SAASO,QAAT,GAAoB;AACzB,QAAMC,YAAY,GAAG,iBAArB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACE,aAAa,CAACC,GAAf,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CACjC;AACEe,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,qDAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,sDAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANiC,CAAD,CAAlC;;AAaA,QAAMC,eAAe,GAAG,CAACC,YAAD,EAAeJ,EAAf,KAAsB;AAC5C,QAAII,YAAY,KAAK,EAArB,EAAyB;AACvBL,MAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AAClB,eAAO,EAAE,GAAGA,IAAL;AAAWL,UAAAA,KAAK,EAAEK,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiBI,YAAjB,GAAgCE,IAAI,CAACL;AAAvD,SAAP;AACD,OAFD,CADM,CAAR;AAKD;AACF,GARD;;AAUA,QAAMM,cAAc,GAAG,MAAM;AAC3B,WAAOT,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAU,CAACA,IAAI,CAACJ,SAA7B,EAAwCO,MAAxC,KAAmD,CAA1D;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjC,UAAMC,oBAAoB,GAAGJ,cAAc,EAA3C;AACAR,IAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AAClB,aAAO,EACL,GAAGA,IADE;AAELJ,QAAAA,SAAS,EAAE,CAACS;AAFP,OAAP;AAID,KALD,CADM,CAAR;AAQD,GAVD;;AAYA,QAAMC,2BAA2B,GAAG,CAACC,sBAAD,EAAyBb,EAAzB,KAClCD,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AAClB,WAAO,EACL,GAAGA,IADE;AAELJ,MAAAA,SAAS,EAAEI,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,CAACa,sBAAlB,GAA2CP,IAAI,CAACJ;AAFtD,KAAP;AAID,GALD,CADM,CADV;;AAUA,QAAMY,gBAAgB,GAAId,EAAD,IACvBD,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CADV;;AAGA,QAAMe,yBAAyB,GAAIC,WAAD,IAAiB;AACjD,WAAOpB,SAAS,KAAKoB,WAAd,GAA4B,UAA5B,GAAyC,WAAhD;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAID,WAAD,IAAiBnB,YAAY,CAACmB,WAAD,CAA3D;;AAEA,QAAME,mBAAmB,GAAItB,SAAD,IAAe;AACzC,UAAMuB,iBAAiB,GAAGvB,SAAS,KAAKT,aAAa,CAACG,SAAtD;AACA,WAAOM,SAAS,KAAKT,aAAa,CAACC,GAA5B,GACHU,KADG,GAEHA,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACJ,SAAL,KAAmBiB,iBAA1C,CAFJ;AAGD,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1B,WAAOtB,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACJ,SAA5B,EAAuCO,MAAvC,GAAgD,CAAvD;AACD,GAFD;;AAIA,QAAMY,oBAAoB,GAAG,MAC3BtB,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAU,CAACA,IAAI,CAACJ,SAA7B,CAAD,CADV;;AAGA,QAAMoB,cAAc,GAClB1B,SAAS,KAAKT,aAAa,CAACC,GAA5B,GACI,EADJ,GAEK,GAAEQ,SAAU,UAASsB,mBAAmB,CAACtB,SAAD,CAAnB,CAA+Ba,MAAO,EAHlE;AAKA,QAAMc,eAAe,GAAI,GAAEpC,aAAa,CAACC,GAAI,UAASU,KAAK,CAACW,MAAO,IAAGa,cAAe,EAArF;AAEA,QAAME,eAAe,GAAG;AACtBC,IAAAA,UAAU,EAAEL,aAAa,GAAG,SAAH,GAAe;AADlB,GAAxB;AAIA;AAAA;AACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,OAAD;AACE,MAAA,cAAc,EAAEb,cADlB;AAEE,MAAA,eAAe,EAAEmB,eAFnB;AAGE,MAAA,oBAAoB,EAAEhB,oBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGQ,mBAAmB,CAACtB,SAAD,CAAnB,CAA+BS,GAA/B,CAAoCC,IAAD;AAAA;AAClC,wBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACN,EADZ;AAEE,MAAA,IAAI,EAAEM,IAFR;AAGE,MAAA,gBAAgB,EAAEQ,gBAHpB;AAIE,MAAA,eAAe,EAAEX,eAJnB;AAKE,MAAA,2BAA2B,EAAES,2BAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH;AAAA;AAeE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCW,eAAlC,CADF;AAAA;AAEE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhC,YAAY,CAACc,GAAb,CAAiB,CAACW,WAAD,EAAcW,KAAd;AAAA;AAChB;AACE,MAAA,SAAS,EAAEZ,yBAAyB,CAACC,WAAD,CADtC;AAEE,MAAA,GAAG,EAAEW,KAFP;AAGE,MAAA,KAAK,EAAEX,WAHT;AAIE,MAAA,OAAO,EAAE,MAAMC,qBAAqB,CAACD,WAAD,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGA,WANH,CADD,CADH,CAFF;AAAA;AAcE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,KAAK,EAAEQ,eAFT;AAGE,MAAA,OAAO,EAAE,MAAMH,oBAAoB,EAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG1B,YALH,CADF,CAdF,CAfF;AADF;AA0CD;;AAED,SAASiC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9C,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC+C,eAAD,EAAkBC,kBAAlB,IAAwChD,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMiD,eAAe,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,kBAAkB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,SAAS,GAAGX,KAAK,CAACtB,cAAN,KAAyB,cAAzB,GAA0C,eAA5D;AACA;AAAA;AAAO;AAAG,QAAA,SAAS,EAAEiC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AACD,GAHD;;AAKA;AAAA;AACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,QAAQ,EAAGL,CAAD,IAAON,KAAK,CAACH,eAAN,CAAsBS,CAAtB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,OAAO,EAAE,MAAMzB,oBAAoB,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6B,YAAY,EADf,CADF;AAAA;AAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAGE,MAAA,KAAK,EAAEP,eAHT;AAIE,MAAA,QAAQ,EAAGG,CAAD,IAAOD,eAAe,CAACC,CAAD,CAJlC;AAKE,MAAA,WAAW,EAAC,0BALd;AAME,MAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF;AADF;AAeD","sourcesContent":["import React, { useState } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\",\n};\n\nexport const filterRadios = Object.values(FILTER_STATUS);\n\nexport function TodoList() {\n  const CLEAR_BUTTON = \"clear completed\";\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: \"this is \bthe first example, double click to edit it\",\n      completed: false,\n    },\n    {\n      id: 2,\n      title: \"this is \bthe second example, double click to edit it\",\n      completed: false,\n    },\n  ]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(\n        todos.map((todo) => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        })\n      );\n    }\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter((todo) => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: !isAllCompletedResult,\n        };\n      })\n    );\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) =>\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed,\n        };\n      })\n    );\n\n  const handleItemDelete = (id) =>\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n  const getButtonStyleByFilterKey = (filterRadio) => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = (filterRadio) => setFilterKey(filterRadio);\n\n  const getTodosByFilterKey = (filterKey) => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? todos\n      : todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  const isNeededClear = () => {\n    return todos.filter((todo) => todo.completed).length > 0;\n  };\n\n  const handleClearCompleted = () =>\n    setTodos(todos.filter((todo) => !todo.completed));\n\n  const notAllItemInfo =\n    filterKey === FILTER_STATUS.ALL\n      ? \"\"\n      : `${filterKey} items:${getTodosByFilterKey(filterKey).length}`;\n\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${todos.length} ${notAllItemInfo}`;\n\n  const showClearButton = {\n    visibility: isNeededClear ? \"visible\" : \"hidden\",\n  };\n\n  return (\n    <div className=\"todo-list-frame\">\n      <AddItem\n        isAllCompleted={isAllCompleted}\n        handleAddSubmit={handleAddSubmit}\n        handleToggleAllItems={handleToggleAllItems}\n      />\n      {getTodosByFilterKey(filterKey).map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleItemDelete={handleItemDelete}\n          handleEditEnter={handleEditEnter}\n          handleChangeCompletedStatus={handleChangeCompletedStatus}\n        />\n      ))}\n      <div className=\"filter-item-area\">\n        <span className=\"remaining-span\">{jointedItemInfo}</span>\n        <span className=\"filter-span\">\n          {filterRadios.map((filterRadio, index) => (\n            <li\n              className={getButtonStyleByFilterKey(filterRadio)}\n              key={index}\n              value={filterRadio}\n              onClick={() => handleChangeFilterKey(filterRadio)}\n            >\n              {filterRadio}\n            </li>\n          ))}\n        </span>\n        <span className=\"clear-span\">\n          <li\n            className=\"clear-li\"\n            style={showClearButton}\n            onClick={() => handleClearCompleted()}\n          >\n            {CLEAR_BUTTON}\n          </li>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nfunction AddItem(props) {\n  const [newId, setNewId] = useState(3);\n  const [currentNewTitle, setCurrentNewTitle] = useState(\"\");\n\n  const handleAddChange = (e) => {\n    e.preventDefault();\n    setCurrentNewTitle(e.target.value);\n  };\n\n  const getCheckIcon = () => {\n    const className = props.isAllCompleted() ? \"fas fa-check\" : \"far fa-circle\";\n    return <i className={className}></i>;\n  };\n\n  return (\n    <form className=\"add-item-area\" onSubmit={(e) => props.handleAddSubmit(e)}>\n      <label className=\"tick-label\" onClick={() => handleToggleAllItems()}>\n        {getCheckIcon()}\n      </label>\n      <input\n        type=\"text\"\n        className=\"add-item-input\"\n        value={currentNewTitle}\n        onChange={(e) => handleAddChange(e)}\n        placeholder=\"enter to add a todo list\"\n        required\n      />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}