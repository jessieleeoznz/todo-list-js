{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js\";\nimport React, { useState } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport const filterRadios = Object.values(FILTER_STATUS);\nexport function TodoList(props) {\n  const [newId, setNewId] = useState(3);\n  const [currentNewTitle, setCurrentNewTitle] = useState(\"\");\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState({\n    todos: [{\n      id: 1,\n      title: \"this is \bthe first example, double click to edit it\",\n      completed: false\n    }, {\n      id: 2,\n      title: \"this is \bthe second example, double click to edit it\",\n      completed: false\n    }]\n  });\n\n  const handleAddChange = event => {\n    event.preventDefault();\n    setCurrentNewTitle(event.target.value);\n  };\n\n  const handleAddSubmit = event => {\n    event.preventDefault();\n    setTodos({\n      todos: [...todos, {\n        id: newId,\n        title: currentNewTitle,\n        completed: false\n      }]\n    });\n    setNewId(newId + 1);\n    setCurrentNewTitle(\"\");\n  };\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(() => {\n        const todos = todos.map(todo => {\n          return { ...todo,\n            title: todo.id === id ? currentValue : todo.title\n          };\n        });\n        return {\n          todos\n        };\n      });\n    }\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    setTodos(() => {\n      const isAllCompleted = isAllCompleted(state);\n      const todos = todos.map(todo => {\n        return { ...todo,\n          completed: !isAllCompleted\n        };\n      });\n      return {\n        todos\n      };\n    });\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n    setTodos(() => {\n      const todos = todos.map(todo => {\n        return { ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed\n        };\n      });\n      return {\n        todos\n      };\n    });\n  };\n\n  const handleItemDelete = id => {\n    setTodos(() => ({\n      todos: todos.filter(todo => todo.id !== id)\n    }));\n  };\n\n  const getTodosByFilterKey = filterKey => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? todos : todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  const handleChangeFilterKey = filterRadio => {\n    setFilterKey(filterRadio);\n  };\n\n  const isNeededClear = () => {\n    return todos.filter(todo => todo.completed).length > 0;\n  };\n\n  const clearCompleted = () => {\n    setTodos(() => {\n      const todos = todos.filter(todo => !todo.completed);\n      return {\n        todos\n      };\n    });\n  };\n\n  const getButtonClassByFilterKey = filterRadio => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const buildCheckIcon = () => {\n    const className = isAllCompleted(state) ? \"fas fa-check\" : \"far fa-circle\";\n    return (\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }\n      })\n    );\n  };\n\n  const CLEAR_BUTTON = \"clear completed\";\n  const notAllItemInfo = filterKey === FILTER_STATUS.ALL ? \"\" : `${filterKey} items:${getTodosByFilterKey(filterKey).length}`;\n  const itemInfo = `${FILTER_STATUS.ALL} items:${todos.length} ${notAllItemInfo}`;\n  const showClearButton = {\n    visibility: isNeededClear(state) ? \"visible\" : \"hidden\"\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      className: \"add-item-area\",\n      onSubmit: handleAddSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"tick-label\",\n      onClick: handleToggleAllItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, buildCheckIcon()),\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      type: \"text\",\n      className: \"add-item-input\",\n      value: currentNewTitle,\n      onChange: handleAddChange,\n      placeholder: \"enter to add a todo list\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    })), getTodosByFilterKey(filterKey).map(todo =>\n    /*#__PURE__*/\n    React.createElement(TodoItem, {\n      key: todo.id,\n      todo: todo,\n      handleItemDelete: () => handleItemDelete(todo.id),\n      handleEditEnter: handleEditEnter,\n      handleChangeCompletedStatus: () => handleChangeCompletedStatus(todo.completed, todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"filter-item-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"remaining-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, itemInfo),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"filter-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, filterRadios.map((filterRadio, index) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: getButtonClassByFilterKey(filterRadio),\n      key: index,\n      value: filterRadio,\n      onClick: () => handleChangeFilterKey(filterRadio),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, filterRadio))),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"clear-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"clear-li\",\n      style: showClearButton,\n      onClick: clearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, CLEAR_BUTTON))))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js"],"names":["React","useState","TodoItem","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","filterRadios","Object","values","TodoList","props","newId","setNewId","currentNewTitle","setCurrentNewTitle","filterKey","setFilterKey","todos","setTodos","id","title","completed","handleAddChange","event","preventDefault","target","value","handleAddSubmit","handleEditEnter","currentValue","map","todo","isAllCompleted","filter","length","handleToggleAllItems","state","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","getTodosByFilterKey","isFilterCompleted","handleChangeFilterKey","filterRadio","isNeededClear","clearCompleted","getButtonClassByFilterKey","buildCheckIcon","className","CLEAR_BUTTON","notAllItemInfo","itemInfo","showClearButton","visibility","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\",\n};\n\nexport const filterRadios = Object.values(FILTER_STATUS);\n\nexport function TodoList(props) {\n  const [newId, setNewId] = useState(3);\n  const [currentNewTitle, setCurrentNewTitle] = useState(\"\");\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState({\n    todos: [\n      {\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n      },\n      {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n      },\n    ],\n  });\n\n  const handleAddChange = (event) => {\n    event.preventDefault();\n    setCurrentNewTitle(event.target.value);\n  };\n\n  const handleAddSubmit = (event) => {\n    event.preventDefault();\n    setTodos({\n      todos: [\n        ...todos,\n        {\n          id: newId,\n          title: currentNewTitle,\n          completed: false,\n        },\n      ],\n    });\n    setNewId(newId + 1);\n    setCurrentNewTitle(\"\");\n  };\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(() => {\n        const todos = todos.map((todo) => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        });\n        return { todos };\n      });\n    }\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter((todo) => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    setTodos(() => {\n      const isAllCompleted = isAllCompleted(state);\n      const todos = todos.map((todo) => {\n        return {\n          ...todo,\n          completed: !isAllCompleted,\n        };\n      });\n      return { todos };\n    });\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n    setTodos(() => {\n      const todos = todos.map((todo) => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed,\n        };\n      });\n      return { todos };\n    });\n  };\n\n  const handleItemDelete = (id) => {\n    setTodos(() => ({\n      todos: todos.filter((todo) => todo.id !== id),\n    }));\n  };\n\n  const getTodosByFilterKey = (filterKey) => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? todos\n      : todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  const handleChangeFilterKey = (filterRadio) => {\n    setFilterKey(filterRadio);\n  };\n\n  const isNeededClear = () => {\n    return todos.filter((todo) => todo.completed).length > 0;\n  };\n\n  const clearCompleted = () => {\n    setTodos(() => {\n      const todos = todos.filter((todo) => !todo.completed);\n      return { todos };\n    });\n  };\n\n  const getButtonClassByFilterKey = (filterRadio) => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const buildCheckIcon = () => {\n    const className = isAllCompleted(state) ? \"fas fa-check\" : \"far fa-circle\";\n    return <i className={className}></i>;\n  };\n\n  const CLEAR_BUTTON = \"clear completed\";\n  const notAllItemInfo =\n    filterKey === FILTER_STATUS.ALL\n      ? \"\"\n      : `${filterKey} items:${getTodosByFilterKey(filterKey).length}`;\n  const itemInfo = `${FILTER_STATUS.ALL} items:${todos.length} ${notAllItemInfo}`;\n  const showClearButton = {\n    visibility: isNeededClear(state) ? \"visible\" : \"hidden\",\n  };\n\n  return (\n    <div className=\"todo-list-frame\">\n      <form className=\"add-item-area\" onSubmit={handleAddSubmit}>\n        <label className=\"tick-label\" onClick={handleToggleAllItems}>\n          {buildCheckIcon()}\n        </label>\n        <input\n          type=\"text\"\n          className=\"add-item-input\"\n          value={currentNewTitle}\n          onChange={handleAddChange}\n          placeholder=\"enter to add a todo list\"\n          required\n        />\n      </form>\n      {getTodosByFilterKey(filterKey).map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleItemDelete={() => handleItemDelete(todo.id)}\n          handleEditEnter={handleEditEnter}\n          handleChangeCompletedStatus={() =>\n            handleChangeCompletedStatus(todo.completed, todo.id)\n          }\n        />\n      ))}\n      <div className=\"filter-item-area\">\n        <span className=\"remaining-span\">{itemInfo}</span>\n        <span className=\"filter-span\">\n          {filterRadios.map((filterRadio, index) => (\n            <li\n              className={getButtonClassByFilterKey(filterRadio)}\n              key={index}\n              value={filterRadio}\n              onClick={() => handleChangeFilterKey(filterRadio)}\n            >\n              {filterRadio}\n            </li>\n          ))}\n        </span>\n        <span className=\"clear-span\">\n          <li\n            className=\"clear-li\"\n            style={showClearButton}\n            onClick={clearCompleted}\n          >\n            {CLEAR_BUTTON}\n          </li>\n        </span>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}