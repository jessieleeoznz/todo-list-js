{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/SingleItemArea.js\";\nimport React, { useState } from \"react\";\nexport function SingleItemArea(props) {\n  const [editStatus, setEditState] = useState(false);\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const itemLabelStyle = {\n    color: props.todo.completed ? \"lightgrey\" : \"black\"\n  };\n\n  const handleItemDoubleClicked = e => {\n    e.preventDefault();\n    setEditState(true);\n    setCurrentValue(props.todo.title);\n  };\n\n  const handleEditChange = e => {\n    e.preventDefault();\n    setCurrentValue(e.target.value);\n  };\n\n  const handleEditKeyDown = e => {\n    const enterKey = 13;\n    const escapeKey = 27;\n\n    if (e.keyCode === enterKey) {\n      handleEditKeyEnter();\n    } else if (e.keyCode === escapeKey) {\n      setEditState(false);\n    }\n  };\n\n  const handleEditKeyEnter = () => {\n    props.handleEditEnter(currentValue, props.todo.id);\n    setEditState(false);\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-item-area\",\n      key: props.todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"todo-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"todo-item-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CheckItemIcon, {\n      handleChangeCompletedStatus: props.handleChangeCompletedStatus,\n      todo: props.todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      className: \"todo-item-checkbox-input\",\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), editStatus ?\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      type: \"text\",\n      className: \"todo-item-input\",\n      value: currentValue,\n      onChange: e => handleEditChange(e),\n      onKeyDown: e => handleEditKeyDown(e),\n      onBlur: () => handleEditKeyEnter(),\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }) :\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"todo-item-text\",\n      onDoubleClick: e => handleItemDoubleClicked(e),\n      style: itemLabelStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, props.todo.title)),\n    /*#__PURE__*/\n    React.createElement(DeleteItemIcon, {\n      handleItemDelete: props.handleItemDelete,\n      id: props.todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    })))\n  );\n}\n\nfunction CheckItemIcon(props) {\n  const className = props.todo.completed ? \"far fa-check-circle\" : \"far fa-circle\";\n  return (\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"tick-label\",\n      onClick: () => props.handleChangeCompletedStatus(props.todo.completed, props.todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"i\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nfunction DeleteItemIcon(props) {\n  const DELETE = \"x\";\n  return (\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"delete-label\",\n      onClick: () => props.handleItemDelete(props.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, DELETE)\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/SingleItemArea.js"],"names":["React","useState","SingleItemArea","props","editStatus","setEditState","currentValue","setCurrentValue","itemLabelStyle","color","todo","completed","handleItemDoubleClicked","e","preventDefault","title","handleEditChange","target","value","handleEditKeyDown","enterKey","escapeKey","keyCode","handleEditKeyEnter","handleEditEnter","id","handleChangeCompletedStatus","handleItemDelete","CheckItemIcon","className","DeleteItemIcon","DELETE"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport function SingleItemArea(props) {\n  const [editStatus, setEditState] = useState(false);\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const itemLabelStyle = {\n    color: props.todo.completed ? \"lightgrey\" : \"black\",\n  };\n\n  const handleItemDoubleClicked = (e) => {\n    e.preventDefault();\n    setEditState(true);\n    setCurrentValue(props.todo.title);\n  };\n\n  const handleEditChange = (e) => {\n    e.preventDefault();\n    setCurrentValue(e.target.value);\n  };\n\n  const handleEditKeyDown = (e) => {\n    const enterKey = 13;\n    const escapeKey = 27;\n    if (e.keyCode === enterKey) {\n      handleEditKeyEnter();\n    } else if (e.keyCode === escapeKey) {\n      setEditState(false);\n    }\n  };\n\n  const handleEditKeyEnter = () => {\n    props.handleEditEnter(currentValue, props.todo.id);\n    setEditState(false);\n  };\n\n  return (\n    <div className=\"todo-item-area\" key={props.todo.id}>\n      <label className=\"todo-item\">\n        <label className=\"todo-item-label\">\n          <CheckItemIcon\n            handleChangeCompletedStatus={props.handleChangeCompletedStatus}\n            todo={props.todo}\n          />\n          <input className=\"todo-item-checkbox-input\" type=\"checkbox\" />\n          {editStatus ? (\n            <input\n              type=\"text\"\n              className=\"todo-item-input\"\n              value={currentValue}\n              onChange={(e) => handleEditChange(e)}\n              onKeyDown={(e) => handleEditKeyDown(e)}\n              onBlur={() => handleEditKeyEnter()}\n              autoFocus={true}\n            />\n          ) : (\n            <label\n              className=\"todo-item-text\"\n              onDoubleClick={(e) => handleItemDoubleClicked(e)}\n              style={itemLabelStyle}\n            >\n              {props.todo.title}\n            </label>\n          )}\n        </label>\n        <DeleteItemIcon\n          handleItemDelete={props.handleItemDelete}\n          id={props.todo.id}\n        />\n      </label>\n    </div>\n  );\n}\n\nfunction CheckItemIcon(props) {\n  const className = props.todo.completed\n    ? \"far fa-check-circle\"\n    : \"far fa-circle\";\n  return (\n    <label\n      className=\"tick-label\"\n      onClick={() =>\n        props.handleChangeCompletedStatus(props.todo.completed, props.todo.id)\n      }\n    >\n      <i className={className}></i>\n    </label>\n  );\n}\n\nfunction DeleteItemIcon(props) {\n  const DELETE = \"x\";\n  return (\n    <label\n      className=\"delete-label\"\n      onClick={() => props.handleItemDelete(props.id)}\n    >\n      {DELETE}\n    </label>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}