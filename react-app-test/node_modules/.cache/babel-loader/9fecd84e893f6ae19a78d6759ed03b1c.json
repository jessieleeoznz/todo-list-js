{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoListApp.js\";\nimport React, { useState } from \"react\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nimport { EditItemArea } from \"./EditItemArea\";\nimport { FilterClearItemsArea } from \"./FilterClearItemsArea\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport function TodoListApp() {\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: \"this is \bthe first example, double click to edit it\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"this is \bthe second example, double click to edit it\",\n    completed: false\n  }]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(todos.map(todo => {\n        return { ...todo,\n          title: todo.id === id ? currentValue : todo.title\n        };\n      }));\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([...todos, {\n      id: newId,\n      title: currentNewTitle,\n      completed: false\n    }]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(todos.map(todo => {\n      return { ...todo,\n        completed: !isAllCompletedResult\n      };\n    }));\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => setTodos(todos.map(todo => {\n    return { ...todo,\n      completed: todo.id === id ? !currentCompletedStatus : todo.completed\n    };\n  }));\n\n  const handleItemDelete = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const handleClearCompleted = () => setTodos(todos.filter(todo => !todo.completed));\n\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n\n  const getTodosByFilterKey = () => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? props.todos : props.todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  const handleChangeFilterKey = filterRadio => setFilterKey(filterRadio);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(AddNewItemArea, {\n      isAllCompleted: isAllCompleted,\n      handleToggleAllItems: handleToggleAllItems,\n      handleAddNewItemToTodos: handleAddNewItemToTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }), getTodosByFilterKey().map(todo =>\n    /*#__PURE__*/\n    React.createElement(EditItemArea, {\n      key: todo.id,\n      todo: todo,\n      handleItemDelete: handleItemDelete,\n      handleEditEnter: handleEditEnter,\n      handleChangeCompletedStatus: handleChangeCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(FilterClearItemsArea, {\n      todos: todos,\n      filterKey: filterKey,\n      handleChangeFilterKey: handleChangeFilterKey,\n      getTodosByFilterKey: getTodosByFilterKey,\n      handleClearCompleted: handleClearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoListApp.js"],"names":["React","useState","AddNewItemArea","EditItemArea","FilterClearItemsArea","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","TodoListApp","todos","setTodos","id","title","completed","handleEditEnter","currentValue","map","todo","handleAddNewItemToTodos","newId","currentNewTitle","isAllCompleted","filter","length","handleToggleAllItems","isAllCompletedResult","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","handleClearCompleted","filterKey","setFilterKey","getTodosByFilterKey","isFilterCompleted","props","handleChangeFilterKey","filterRadio"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,OAAO,MAAMC,aAAa,GAAG;AAC3BC,EAAAA,GAAG,EAAE,KADsB;AAE3BC,EAAAA,WAAW,EAAE,aAFc;AAG3BC,EAAAA,SAAS,EAAE;AAHgB,CAAtB;AAMP,OAAO,SAASC,WAAT,GAAuB;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CACjC;AACEW,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,qDAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,sDAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANiC,CAAD,CAAlC;;AAaA,QAAMC,eAAe,GAAG,CAACC,YAAD,EAAeJ,EAAf,KAAsB;AAC5C,QAAII,YAAY,KAAK,EAArB,EAAyB;AACvBL,MAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AAClB,eAAO,EAAE,GAAGA,IAAL;AAAWL,UAAAA,KAAK,EAAEK,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiBI,YAAjB,GAAgCE,IAAI,CAACL;AAAvD,SAAP;AACD,OAFD,CADM,CAAR;AAKD;AACF,GARD;;AAUA,QAAMM,uBAAuB,GAAG,CAACC,KAAD,EAAQC,eAAR,KAA4B;AAC1DV,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AACEE,MAAAA,EAAE,EAAEQ,KADN;AAEEP,MAAAA,KAAK,EAAEQ,eAFT;AAGEP,MAAAA,SAAS,EAAE;AAHb,KAFO,CAAD,CAAR;AAQD,GATD;;AAWA,QAAMQ,cAAc,GAAG,MAAM;AAC3B,WAAOZ,KAAK,CAACa,MAAN,CAAcL,IAAD,IAAU,CAACA,IAAI,CAACJ,SAA7B,EAAwCU,MAAxC,KAAmD,CAA1D;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjC,UAAMC,oBAAoB,GAAGJ,cAAc,EAA3C;AACAX,IAAAA,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AAClB,aAAO,EACL,GAAGA,IADE;AAELJ,QAAAA,SAAS,EAAE,CAACY;AAFP,OAAP;AAID,KALD,CADM,CAAR;AAQD,GAVD;;AAYA,QAAMC,2BAA2B,GAAG,CAACC,sBAAD,EAAyBhB,EAAzB,KAClCD,QAAQ,CACND,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AAClB,WAAO,EACL,GAAGA,IADE;AAELJ,MAAAA,SAAS,EAAEI,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,CAACgB,sBAAlB,GAA2CV,IAAI,CAACJ;AAFtD,KAAP;AAID,GALD,CADM,CADV;;AAUA,QAAMe,gBAAgB,GAAIjB,EAAD,IACvBD,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcL,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CADV;;AAGA,QAAMkB,oBAAoB,GAAG,MAC3BnB,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcL,IAAD,IAAU,CAACA,IAAI,CAACJ,SAA7B,CAAD,CADV;;AAGA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAACI,aAAa,CAACC,GAAf,CAA1C;;AAEA,QAAM2B,mBAAmB,GAAG,MAAM;AAChC,UAAMC,iBAAiB,GAAGH,SAAS,KAAK1B,aAAa,CAACG,SAAtD;AACA,WAAOuB,SAAS,KAAK1B,aAAa,CAACC,GAA5B,GACH6B,KAAK,CAACzB,KADH,GAEHyB,KAAK,CAACzB,KAAN,CAAYa,MAAZ,CAAoBL,IAAD,IAAUA,IAAI,CAACJ,SAAL,KAAmBoB,iBAAhD,CAFJ;AAGD,GALD;;AAOA,QAAME,qBAAqB,GAAIC,WAAD,IAAiBL,YAAY,CAACK,WAAD,CAA3D;;AAEA;AAAA;AACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,cAAD;AACE,MAAA,cAAc,EAAEf,cADlB;AAEE,MAAA,oBAAoB,EAAEG,oBAFxB;AAGE,MAAA,uBAAuB,EAAEN,uBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGc,mBAAmB,GAAGhB,GAAtB,CAA2BC,IAAD;AAAA;AACzB,wBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACN,EADZ;AAEE,MAAA,IAAI,EAAEM,IAFR;AAGE,MAAA,gBAAgB,EAAEW,gBAHpB;AAIE,MAAA,eAAe,EAAEd,eAJnB;AAKE,MAAA,2BAA2B,EAAEY,2BAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CANH;AAAA;AAeE,wBAAC,oBAAD;AACE,MAAA,KAAK,EAAEjB,KADT;AAEE,MAAA,SAAS,EAAEqB,SAFb;AAGE,MAAA,qBAAqB,EAAEK,qBAHzB;AAIE,MAAA,mBAAmB,EAAEH,mBAJvB;AAKE,MAAA,oBAAoB,EAAEH,oBALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF;AADF;AAyBD","sourcesContent":["import React, { useState } from \"react\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nimport { EditItemArea } from \"./EditItemArea\";\nimport { FilterClearItemsArea } from \"./FilterClearItemsArea\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\",\n};\n\nexport function TodoListApp() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: \"this is \bthe first example, double click to edit it\",\n      completed: false,\n    },\n    {\n      id: 2,\n      title: \"this is \bthe second example, double click to edit it\",\n      completed: false,\n    },\n  ]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(\n        todos.map((todo) => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        })\n      );\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([\n      ...todos,\n      {\n        id: newId,\n        title: currentNewTitle,\n        completed: false,\n      },\n    ]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter((todo) => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: !isAllCompletedResult,\n        };\n      })\n    );\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) =>\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed,\n        };\n      })\n    );\n\n  const handleItemDelete = (id) =>\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n  const handleClearCompleted = () =>\n    setTodos(todos.filter((todo) => !todo.completed));\n\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n\n  const getTodosByFilterKey = () => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? props.todos\n      : props.todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  const handleChangeFilterKey = (filterRadio) => setFilterKey(filterRadio);\n\n  return (\n    <div className=\"todo-list-frame\">\n      <AddNewItemArea\n        isAllCompleted={isAllCompleted}\n        handleToggleAllItems={handleToggleAllItems}\n        handleAddNewItemToTodos={handleAddNewItemToTodos}\n      />\n      {getTodosByFilterKey().map((todo) => (\n        <EditItemArea\n          key={todo.id}\n          todo={todo}\n          handleItemDelete={handleItemDelete}\n          handleEditEnter={handleEditEnter}\n          handleChangeCompletedStatus={handleChangeCompletedStatus}\n        />\n      ))}\n      <FilterClearItemsArea\n        todos={todos}\n        filterKey={filterKey}\n        handleChangeFilterKey={handleChangeFilterKey}\n        getTodosByFilterKey={getTodosByFilterKey}\n        handleClearCompleted={handleClearCompleted}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}