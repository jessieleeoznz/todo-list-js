{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/FilterClearAndEditItemsArea.js\";\nimport React, { useState } from \"react\";\nimport { EditItemArea } from \"./EditItemArea\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport function FilterClearAndEditItemsArea(props) {\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n\n  const getTodosByFilterKey = () => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? props.todos : props.todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, getTodosByFilterKey().map(todo =>\n    /*#__PURE__*/\n    React.createElement(EditItemArea, {\n      key: todo.id,\n      todo: todo,\n      handleItemDelete: props.handleItemDelete,\n      handleEditEnter: props.handleEditEnter,\n      handleChangeCompletedStatus: props.handleChangeCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(FilterClearItemsArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nfunction FilterClearItemsArea() {\n  const CLEAR_BUTTON = \"clear completed\";\n  const filterRadios = Object.values(FILTER_STATUS);\n\n  const getButtonStyleByFilterKey = filterRadio => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = filterRadio => setFilterKey(filterRadio);\n\n  const notAllItemInfo = filterKey === FILTER_STATUS.ALL ? \"\" : `${filterKey} items:${getTodosByFilterKey().length}`;\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${props.todos.length} ${notAllItemInfo}`;\n\n  const isNeededClear = () => {\n    return props.todos.filter(todo => todo.completed).length > 0;\n  };\n\n  const showClearButton = {\n    visibility: isNeededClear() ? \"visible\" : \"hidden\"\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"filter-item-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"remaining-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, jointedItemInfo),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"filter-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, filterRadios.map((filterRadio, index) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: getButtonStyleByFilterKey(filterRadio),\n      key: index,\n      value: filterRadio,\n      onClick: () => handleChangeFilterKey(filterRadio),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, filterRadio))),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"clear-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"clear-li\",\n      style: showClearButton,\n      onClick: () => props.handleClearCompleted(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, CLEAR_BUTTON)))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/FilterClearAndEditItemsArea.js"],"names":["React","useState","EditItemArea","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","FilterClearAndEditItemsArea","props","filterKey","setFilterKey","getTodosByFilterKey","isFilterCompleted","todos","filter","todo","completed","map","id","handleItemDelete","handleEditEnter","handleChangeCompletedStatus","FilterClearItemsArea","CLEAR_BUTTON","filterRadios","Object","values","getButtonStyleByFilterKey","filterRadio","handleChangeFilterKey","notAllItemInfo","length","jointedItemInfo","isNeededClear","showClearButton","visibility","index","handleClearCompleted"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { EditItemArea } from \"./EditItemArea\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\",\n};\n\nexport function FilterClearAndEditItemsArea(props) {\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n\n  const getTodosByFilterKey = () => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? props.todos\n      : props.todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  return (\n    <div>\n      {getTodosByFilterKey().map((todo) => (\n        <EditItemArea\n          key={todo.id}\n          todo={todo}\n          handleItemDelete={props.handleItemDelete}\n          handleEditEnter={props.handleEditEnter}\n          handleChangeCompletedStatus={props.handleChangeCompletedStatus}\n        />\n      ))}\n      <FilterClearItemsArea />\n    </div>\n  );\n}\n\nfunction FilterClearItemsArea() {\n  const CLEAR_BUTTON = \"clear completed\";\n\n  const filterRadios = Object.values(FILTER_STATUS);\n\n  const getButtonStyleByFilterKey = (filterRadio) => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = (filterRadio) => setFilterKey(filterRadio);\n\n  const notAllItemInfo =\n    filterKey === FILTER_STATUS.ALL\n      ? \"\"\n      : `${filterKey} items:${getTodosByFilterKey().length}`;\n\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${props.todos.length} ${notAllItemInfo}`;\n\n  const isNeededClear = () => {\n    return props.todos.filter((todo) => todo.completed).length > 0;\n  };\n\n  const showClearButton = {\n    visibility: isNeededClear() ? \"visible\" : \"hidden\",\n  };\n\n  return (\n    <div className=\"filter-item-area\">\n      <span className=\"remaining-span\">{jointedItemInfo}</span>\n      <span className=\"filter-span\">\n        {filterRadios.map((filterRadio, index) => (\n          <li\n            className={getButtonStyleByFilterKey(filterRadio)}\n            key={index}\n            value={filterRadio}\n            onClick={() => handleChangeFilterKey(filterRadio)}\n          >\n            {filterRadio}\n          </li>\n        ))}\n      </span>\n      <span className=\"clear-span\">\n        <li\n          className=\"clear-li\"\n          style={showClearButton}\n          onClick={() => props.handleClearCompleted()}\n        >\n          {CLEAR_BUTTON}\n        </li>\n      </span>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}