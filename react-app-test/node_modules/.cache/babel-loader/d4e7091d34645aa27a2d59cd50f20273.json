{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js\";\nimport React, { useState } from \"react\";\nimport { SingleItemArea } from \"./SingleItemArea\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport const filterRadios = Object.values(FILTER_STATUS);\nexport function TodoList() {\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: \"this is \bthe first example, double click to edit it\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"this is \bthe second example, double click to edit it\",\n    completed: false\n  }]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(todos.map(todo => {\n        return { ...todo,\n          title: todo.id === id ? currentValue : todo.title\n        };\n      }));\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([...todos, {\n      id: newId,\n      title: currentNewTitle,\n      completed: false\n    }]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(todos.map(todo => {\n      return { ...todo,\n        completed: !isAllCompletedResult\n      };\n    }));\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => setTodos(todos.map(todo => {\n    return { ...todo,\n      completed: todo.id === id ? !currentCompletedStatus : todo.completed\n    };\n  }));\n\n  const handleItemDelete = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const getButtonStyleByFilterKey = filterRadio => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = filterRadio => setFilterKey(filterRadio);\n\n  const getTodosByFilterKey = filterKey => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? todos : todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  const handleClearCompleted = () => setTodos(todos.filter(todo => !todo.completed));\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(AddNewItemArea, {\n      isAllCompleted: isAllCompleted,\n      handleToggleAllItems: handleToggleAllItems,\n      handleAddNewItemToTodos: handleAddNewItemToTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FilterAndEditItemsArea, {\n      todos: todos,\n      handleEditEnter: handleEditEnter,\n      handleItemDelete: handleItemDelete,\n      handleChangeCompletedStatus: handleChangeCompletedStatus,\n      getTodosByFilterKey: getTodosByFilterKey,\n      getButtonStyleByFilterKey: getButtonStyleByFilterKey,\n      handleChangeFilterKey: handleChangeFilterKey,\n      handleClearCompleted: handleClearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nfunction FilterAndEditItemsArea(props) {\n  const CLEAR_BUTTON = \"clear completed\";\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${todos.length} ${notAllItemInfo}`;\n  const notAllItemInfo = filterKey === FILTER_STATUS.ALL ? \"\" : `${filterKey} items:${getTodosByFilterKey(filterKey).length}`;\n\n  const isNeededClear = () => {\n    return props.todos.filter(todo => todo.completed).length > 0;\n  };\n\n  const showClearButton = {\n    visibility: isNeededClear() ? \"visible\" : \"hidden\"\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, props.getTodosByFilterKey(filterKey).map(todo =>\n    /*#__PURE__*/\n    React.createElement(SingleItemArea, {\n      key: todo.id,\n      todo: todo,\n      handleItemDelete: props.handleItemDelete,\n      handleEditEnter: props.handleEditEnter,\n      handleChangeCompletedStatus: props.handleChangeCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"filter-item-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"remaining-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, jointedItemInfo),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"filter-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, filterRadios.map((filterRadio, index) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: props.getButtonStyleByFilterKey(filterRadio),\n      key: index,\n      value: filterRadio,\n      onClick: () => props.handleChangeFilterKey(filterRadio),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, filterRadio))),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"clear-span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"clear-li\",\n      style: showClearButton,\n      onClick: () => props.handleClearCompleted(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, CLEAR_BUTTON))))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js"],"names":["React","useState","SingleItemArea","AddNewItemArea","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","filterRadios","Object","values","TodoList","filterKey","setFilterKey","todos","setTodos","id","title","completed","handleEditEnter","currentValue","map","todo","handleAddNewItemToTodos","newId","currentNewTitle","isAllCompleted","filter","length","handleToggleAllItems","isAllCompletedResult","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","getButtonStyleByFilterKey","filterRadio","handleChangeFilterKey","getTodosByFilterKey","isFilterCompleted","handleClearCompleted","FilterAndEditItemsArea","props","CLEAR_BUTTON","jointedItemInfo","notAllItemInfo","isNeededClear","showClearButton","visibility","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SingleItemArea } from \"./SingleItemArea\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\",\n};\n\nexport const filterRadios = Object.values(FILTER_STATUS);\n\nexport function TodoList() {\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: \"this is \bthe first example, double click to edit it\",\n      completed: false,\n    },\n    {\n      id: 2,\n      title: \"this is \bthe second example, double click to edit it\",\n      completed: false,\n    },\n  ]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(\n        todos.map((todo) => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        })\n      );\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([\n      ...todos,\n      {\n        id: newId,\n        title: currentNewTitle,\n        completed: false,\n      },\n    ]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter((todo) => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: !isAllCompletedResult,\n        };\n      })\n    );\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) =>\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed,\n        };\n      })\n    );\n\n  const handleItemDelete = (id) =>\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n  const getButtonStyleByFilterKey = (filterRadio) => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = (filterRadio) => setFilterKey(filterRadio);\n\n  const getTodosByFilterKey = (filterKey) => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? todos\n      : todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  const handleClearCompleted = () =>\n    setTodos(todos.filter((todo) => !todo.completed));\n\n  return (\n    <div className=\"todo-list-frame\">\n      <AddNewItemArea\n        isAllCompleted={isAllCompleted}\n        handleToggleAllItems={handleToggleAllItems}\n        handleAddNewItemToTodos={handleAddNewItemToTodos}\n      />\n      <FilterAndEditItemsArea\n        todos={todos}\n        handleEditEnter={handleEditEnter}\n        handleItemDelete={handleItemDelete}\n        handleChangeCompletedStatus={handleChangeCompletedStatus}\n        getTodosByFilterKey={getTodosByFilterKey}\n        getButtonStyleByFilterKey={getButtonStyleByFilterKey}\n        handleChangeFilterKey={handleChangeFilterKey}\n        handleClearCompleted={handleClearCompleted}\n      />\n    </div>\n  );\n}\n\nfunction FilterAndEditItemsArea(props) {\n  const CLEAR_BUTTON = \"clear completed\";\n\n  const jointedItemInfo = `${FILTER_STATUS.ALL} items:${todos.length} ${notAllItemInfo}`;\n\n  const notAllItemInfo =\n    filterKey === FILTER_STATUS.ALL\n      ? \"\"\n      : `${filterKey} items:${getTodosByFilterKey(filterKey).length}`;\n\n  const isNeededClear = () => {\n    return props.todos.filter((todo) => todo.completed).length > 0;\n  };\n\n  const showClearButton = {\n    visibility: isNeededClear() ? \"visible\" : \"hidden\",\n  };\n\n  return (\n    <div>\n      {props.getTodosByFilterKey(filterKey).map((todo) => (\n        <SingleItemArea\n          key={todo.id}\n          todo={todo}\n          handleItemDelete={props.handleItemDelete}\n          handleEditEnter={props.handleEditEnter}\n          handleChangeCompletedStatus={props.handleChangeCompletedStatus}\n        />\n      ))}\n      <div className=\"filter-item-area\">\n        <span className=\"remaining-span\">{jointedItemInfo}</span>\n        <span className=\"filter-span\">\n          {filterRadios.map((filterRadio, index) => (\n            <li\n              className={props.getButtonStyleByFilterKey(filterRadio)}\n              key={index}\n              value={filterRadio}\n              onClick={() => props.handleChangeFilterKey(filterRadio)}\n            >\n              {filterRadio}\n            </li>\n          ))}\n        </span>\n        <span className=\"clear-span\">\n          <li\n            className=\"clear-li\"\n            style={showClearButton}\n            onClick={() => props.handleClearCompleted()}\n          >\n            {CLEAR_BUTTON}\n          </li>\n        </span>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}