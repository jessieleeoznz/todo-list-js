{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/react-app-test/src/TodoList.js\";\nimport React, { useLayoutEffect } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nexport class TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.currentTitle);\n      this.setState(state => ({\n        todos: [...state.todos, {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }],\n        newId: state.newId + 1,\n        currentTitle: \"\"\n      }));\n    };\n\n    this.handleEditEnter = (currentValue, id) => {\n      this.setState(state => {\n        const todos = state.todos.map(item => {\n          return { ...item,\n            title: item.id === id ? currentValue : item.title\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.isAllCompleted = state => {\n      console.log(state.todos.filter(item => !item.completed).length === 0);\n      return state.todos.filter(item => !item.completed).length === 0;\n    };\n\n    this.handleToggleAllItems = () => {\n      this.setState(state => {\n        const todos = state.todos.map(item => {\n          return { ...item,\n            completed: state.todos.filter(item => !item.completed).length === 0 ? false : true\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n      console.log(currentCompletedStatus, id); // this.setState(state => {\n      //   const todos = state.todos.map(item => {\n      //     return {\n      //       ...item,\n      //       completed: item.id === id ? !currentCompletedStatus : item.completed\n      //     };\n      //   });\n      //   return { todos };\n      // });\n    };\n\n    this.state = {\n      newId: 3,\n      currentTitle: \"\",\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"todo-list-frame\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        className: \"add-item-area\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"tick-label\",\n        onClick: this.handleToggleAllItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"far fa-circle\",\n        style: {\n          display: this.isAllCompleted ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        style: {\n          display: this.isAllCompleted ? \"block\" : \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        className: \"add-item-area\",\n        value: this.state.currentTitle,\n        onChange: event => this.setState({\n          currentTitle: event.target.value\n        }),\n        placeholder: \"enter to add a todolist\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, this.state.todos.map(todo =>\n      /*#__PURE__*/\n      React.createElement(TodoItem, {\n        key: todo.id,\n        todo: todo,\n        handleDelete: () => this.setState(state => ({\n          todos: state.todos.filter(item => item.id !== todo.id)\n        })),\n        handleEditEnter: this.handleEditEnter,\n        isAllCompleted: this.isAllCompleted,\n        handleChangeCompletedStatus: () => this.handleChangeCompletedStatus(todo.completed, todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/jessie/workspace/react-app-test/src/TodoList.js"],"names":["React","useLayoutEffect","TodoItem","TodoList","Component","constructor","props","handleSubmit","event","preventDefault","console","log","state","currentTitle","setState","todos","id","newId","title","completed","editing","handleEditEnter","currentValue","map","item","isAllCompleted","filter","length","handleToggleAllItems","handleChangeCompletedStatus","currentCompletedStatus","render","display","target","value","todo"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect } from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport class TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newId: 3,\n      currentTitle: \"\",\n      todos: [\n        {\n          id: 1,\n          title: \"this is \bthe first example, double click to edit it\",\n          completed: false,\n          editing: false\n        },\n        {\n          id: 2,\n          title: \"this is \bthe second example, double click to edit it\",\n          completed: false,\n          editing: false\n        }\n      ]\n    };\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(this.state.currentTitle);\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }\n      ],\n      newId: state.newId + 1,\n      currentTitle: \"\"\n    }));\n  };\n\n  handleEditEnter = (currentValue, id) => {\n    this.setState(state => {\n      const todos = state.todos.map(item => {\n        return { ...item, title: item.id === id ? currentValue : item.title };\n      });\n      return { todos };\n    });\n  };\n\n  isAllCompleted = state => {\n    console.log(state.todos.filter(item => !item.completed).length === 0);\n    return state.todos.filter(item => !item.completed).length === 0;\n  };\n\n  handleToggleAllItems = () => {\n    this.setState(state => {\n      const todos = state.todos.map(item => {\n        return {\n          ...item,\n          completed:\n            state.todos.filter(item => !item.completed).length === 0\n              ? false\n              : true\n        };\n      });\n      return { todos };\n    });\n  };\n\n  handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n    console.log(currentCompletedStatus, id);\n    // this.setState(state => {\n    //   const todos = state.todos.map(item => {\n    //     return {\n    //       ...item,\n    //       completed: item.id === id ? !currentCompletedStatus : item.completed\n    //     };\n    //   });\n    //   return { todos };\n    // });\n  };\n\n  render() {\n    return (\n      <div className=\"todo-list-frame\">\n        <form className=\"add-item-area\" onSubmit={this.handleSubmit}>\n          <label className=\"tick-label\" onClick={this.handleToggleAllItems}>\n            <i\n              className=\"far fa-circle\"\n              style={{ display: this.isAllCompleted ? \"none\" : \"block\" }}\n            ></i>\n            <i\n              className=\"fas fa-check\"\n              style={{ display: this.isAllCompleted ? \"block\" : \"none\" }}\n            ></i>\n          </label>\n          <input\n            type=\"text\"\n            className=\"add-item-area\"\n            value={this.state.currentTitle}\n            onChange={event =>\n              this.setState({ currentTitle: event.target.value })\n            }\n            placeholder=\"enter to add a todolist\"\n            required\n          />\n        </form>\n        <div>\n          {this.state.todos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              handleDelete={() =>\n                this.setState(state => ({\n                  todos: state.todos.filter(item => item.id !== todo.id)\n                }))\n              }\n              handleEditEnter={this.handleEditEnter}\n              isAllCompleted={this.isAllCompleted}\n              handleChangeCompletedStatus={() =>\n                this.handleChangeCompletedStatus(todo.completed, todo.id)\n              }\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}