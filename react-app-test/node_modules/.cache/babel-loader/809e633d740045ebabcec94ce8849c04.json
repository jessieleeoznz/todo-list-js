{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js\";\nimport React, { useState } from \"react\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nimport { FilterAndEditItemsArea } from \"./FilterAndEditItemsArea\";\nexport function TodoList() {\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: \"this is \bthe first example, double click to edit it\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"this is \bthe second example, double click to edit it\",\n    completed: false\n  }]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(todos.map(todo => {\n        return { ...todo,\n          title: todo.id === id ? currentValue : todo.title\n        };\n      }));\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([...todos, {\n      id: newId,\n      title: currentNewTitle,\n      completed: false\n    }]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(todos.map(todo => {\n      return { ...todo,\n        completed: !isAllCompletedResult\n      };\n    }));\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => setTodos(todos.map(todo => {\n    return { ...todo,\n      completed: todo.id === id ? !currentCompletedStatus : todo.completed\n    };\n  }));\n\n  const handleItemDelete = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const getButtonStyleByFilterKey = filterRadio => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = filterRadio => setFilterKey(filterRadio);\n\n  const getTodosByFilterKey = filterKey => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? todos : todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  const handleClearCompleted = () => setTodos(todos.filter(todo => !todo.completed));\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(AddNewItemArea, {\n      isAllCompleted: isAllCompleted,\n      handleToggleAllItems: handleToggleAllItems,\n      handleAddNewItemToTodos: handleAddNewItemToTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(FilterAndEditItemsArea, {\n      todos: todos,\n      filterKey: filterKey,\n      handleEditEnter: handleEditEnter,\n      handleItemDelete: handleItemDelete,\n      handleChangeCompletedStatus: handleChangeCompletedStatus,\n      getTodosByFilterKey: getTodosByFilterKey,\n      getButtonStyleByFilterKey: getButtonStyleByFilterKey,\n      handleChangeFilterKey: handleChangeFilterKey,\n      handleClearCompleted: handleClearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js"],"names":["React","useState","AddNewItemArea","FilterAndEditItemsArea","TodoList","filterKey","setFilterKey","FILTER_STATUS","ALL","todos","setTodos","id","title","completed","handleEditEnter","currentValue","map","todo","handleAddNewItemToTodos","newId","currentNewTitle","isAllCompleted","filter","length","handleToggleAllItems","isAllCompletedResult","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","getButtonStyleByFilterKey","filterRadio","handleChangeFilterKey","getTodosByFilterKey","isFilterCompleted","COMPLETED","handleClearCompleted"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nimport { FilterAndEditItemsArea } from \"./FilterAndEditItemsArea\";\n\nexport function TodoList() {\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: \"this is \bthe first example, double click to edit it\",\n      completed: false,\n    },\n    {\n      id: 2,\n      title: \"this is \bthe second example, double click to edit it\",\n      completed: false,\n    },\n  ]);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(\n        todos.map((todo) => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        })\n      );\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([\n      ...todos,\n      {\n        id: newId,\n        title: currentNewTitle,\n        completed: false,\n      },\n    ]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter((todo) => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: !isAllCompletedResult,\n        };\n      })\n    );\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) =>\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed,\n        };\n      })\n    );\n\n  const handleItemDelete = (id) =>\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n  const getButtonStyleByFilterKey = (filterRadio) => {\n    return filterKey === filterRadio ? \"filtered\" : \"filter-li\";\n  };\n\n  const handleChangeFilterKey = (filterRadio) => setFilterKey(filterRadio);\n\n  const getTodosByFilterKey = (filterKey) => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? todos\n      : todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  const handleClearCompleted = () =>\n    setTodos(todos.filter((todo) => !todo.completed));\n\n  return (\n    <div className=\"todo-list-frame\">\n      <AddNewItemArea\n        isAllCompleted={isAllCompleted}\n        handleToggleAllItems={handleToggleAllItems}\n        handleAddNewItemToTodos={handleAddNewItemToTodos}\n      />\n      <FilterAndEditItemsArea\n        todos={todos}\n        filterKey={filterKey}\n        handleEditEnter={handleEditEnter}\n        handleItemDelete={handleItemDelete}\n        handleChangeCompletedStatus={handleChangeCompletedStatus}\n        getTodosByFilterKey={getTodosByFilterKey}\n        getButtonStyleByFilterKey={getButtonStyleByFilterKey}\n        handleChangeFilterKey={handleChangeFilterKey}\n        handleClearCompleted={handleClearCompleted}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}