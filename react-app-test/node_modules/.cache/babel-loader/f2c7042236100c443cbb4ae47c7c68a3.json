{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoListApp.js\";\nimport React, { useState } from \"react\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nimport { EditItemsArea } from \"./EditItemsArea\";\nimport { FilterClearItemsArea as FilterAndClearItemsArea } from \"./FilterClearItemsArea\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport function TodoListApp() {\n  const [todos, setTodos] = useState([{\n    id: 1,\n    title: \"this is \bthe first example, double click to edit it\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"this is \bthe second example, double click to edit it\",\n    completed: false\n  }]);\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(todos.map(todo => {\n        return { ...todo,\n          title: todo.id === id ? currentValue : todo.title\n        };\n      }));\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([...todos, {\n      id: newId,\n      title: currentNewTitle,\n      completed: false\n    }]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter(todo => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(todos.map(todo => {\n      return { ...todo,\n        completed: !isAllCompletedResult\n      };\n    }));\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) => setTodos(todos.map(todo => {\n    return { ...todo,\n      completed: todo.id === id ? !currentCompletedStatus : todo.completed\n    };\n  }));\n\n  const handleItemDelete = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const handleClearCompleted = () => setTodos(todos.filter(todo => !todo.completed));\n\n  const getTodosByFilterKey = () => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL ? todos : todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  const handleChangeFilterKey = filterRadio => setFilterKey(filterRadio);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(AddNewItemArea, {\n      isAllCompleted: isAllCompleted,\n      handleToggleAllItems: handleToggleAllItems,\n      handleAddNewItemToTodos: handleAddNewItemToTodos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }), getTodosByFilterKey().map(todo =>\n    /*#__PURE__*/\n    React.createElement(EditItemsArea, {\n      key: todo.id,\n      todo: todo,\n      handleItemDelete: handleItemDelete,\n      handleEditEnter: handleEditEnter,\n      handleChangeCompletedStatus: handleChangeCompletedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(FilterAndClearItemsArea, {\n      todos: todos,\n      filterKey: filterKey,\n      handleChangeFilterKey: handleChangeFilterKey,\n      getTodosByFilterKey: getTodosByFilterKey,\n      handleClearCompleted: handleClearCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoListApp.js"],"names":["React","useState","AddNewItemArea","EditItemsArea","FilterClearItemsArea","FilterAndClearItemsArea","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","TodoListApp","todos","setTodos","id","title","completed","filterKey","setFilterKey","handleEditEnter","currentValue","map","todo","handleAddNewItemToTodos","newId","currentNewTitle","isAllCompleted","filter","length","handleToggleAllItems","isAllCompletedResult","handleChangeCompletedStatus","currentCompletedStatus","handleItemDelete","handleClearCompleted","getTodosByFilterKey","isFilterCompleted","handleChangeFilterKey","filterRadio"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { AddNewItemArea } from \"./AddNewItemArea\";\nimport { EditItemsArea } from \"./EditItemsArea\";\nimport { FilterClearItemsArea as FilterAndClearItemsArea } from \"./FilterClearItemsArea\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\",\n};\n\nexport function TodoListApp() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      title: \"this is \bthe first example, double click to edit it\",\n      completed: false,\n    },\n    {\n      id: 2,\n      title: \"this is \bthe second example, double click to edit it\",\n      completed: false,\n    },\n  ]);\n  const [filterKey, setFilterKey] = useState(FILTER_STATUS.ALL);\n\n  const handleEditEnter = (currentValue, id) => {\n    if (currentValue !== \"\") {\n      setTodos(\n        todos.map((todo) => {\n          return { ...todo, title: todo.id === id ? currentValue : todo.title };\n        })\n      );\n    }\n  };\n\n  const handleAddNewItemToTodos = (newId, currentNewTitle) => {\n    setTodos([\n      ...todos,\n      {\n        id: newId,\n        title: currentNewTitle,\n        completed: false,\n      },\n    ]);\n  };\n\n  const isAllCompleted = () => {\n    return todos.filter((todo) => !todo.completed).length === 0;\n  };\n\n  const handleToggleAllItems = () => {\n    const isAllCompletedResult = isAllCompleted();\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: !isAllCompletedResult,\n        };\n      })\n    );\n  };\n\n  const handleChangeCompletedStatus = (currentCompletedStatus, id) =>\n    setTodos(\n      todos.map((todo) => {\n        return {\n          ...todo,\n          completed: todo.id === id ? !currentCompletedStatus : todo.completed,\n        };\n      })\n    );\n\n  const handleItemDelete = (id) =>\n    setTodos(todos.filter((todo) => todo.id !== id));\n\n  const handleClearCompleted = () =>\n    setTodos(todos.filter((todo) => !todo.completed));\n\n  const getTodosByFilterKey = () => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? todos\n      : todos.filter((todo) => todo.completed === isFilterCompleted);\n  };\n\n  const handleChangeFilterKey = (filterRadio) => setFilterKey(filterRadio);\n\n  return (\n    <div className=\"todo-list-frame\">\n      <AddNewItemArea\n        isAllCompleted={isAllCompleted}\n        handleToggleAllItems={handleToggleAllItems}\n        handleAddNewItemToTodos={handleAddNewItemToTodos}\n      />\n      {getTodosByFilterKey().map((todo) => (\n        <EditItemsArea\n          key={todo.id}\n          todo={todo}\n          handleItemDelete={handleItemDelete}\n          handleEditEnter={handleEditEnter}\n          handleChangeCompletedStatus={handleChangeCompletedStatus}\n        />\n      ))}\n      <FilterAndClearItemsArea\n        todos={todos}\n        filterKey={filterKey}\n        handleChangeFilterKey={handleChangeFilterKey}\n        getTodosByFilterKey={getTodosByFilterKey}\n        handleClearCompleted={handleClearCompleted}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}