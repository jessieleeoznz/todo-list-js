{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js\";\nimport React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\nexport const filterRadios = Object.values(FILTER_STATUS);\nexport class TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.setState({\n        currentTitle: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState(state => ({\n        todos: [...state.todos, {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }],\n        newId: state.newId + 1,\n        currentTitle: \"\"\n      }));\n    };\n\n    this.handleEditEnter = (currentValue, id) => {\n      this.setState(state => {\n        const todos = state.todos.map(item => {\n          return { ...item,\n            title: item.id === id ? currentValue : item.title\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.isAllCompleted = state => {\n      return state.todos.filter(item => !item.completed).length === 0;\n    };\n\n    this.handleToggleAllItems = () => {\n      this.setState(state => {\n        const todos = state.todos.map(item => {\n          return { ...item,\n            completed: state.todos.filter(item => !item.completed).length === 0 ? false : true\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n      this.setState(state => {\n        const todos = state.todos.map(item => {\n          return { ...item,\n            completed: item.id === id ? !currentCompletedStatus : item.completed\n          };\n        });\n        return {\n          todos\n        };\n      });\n    };\n\n    this.handleDelete = id => {\n      this.setState(state => ({\n        todos: state.todos.filter(item => item.id !== id)\n      }));\n    };\n\n    this.handleTodosByFilterKey = filterKey => {\n      const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n      return filterKey === FILTER_STATUS.ALL ? this.state.todos : this.state.todos.filter(todo => todo.completed === isFilterCompleted);\n    };\n\n    this.handleChangeFilterKey = filterRadio => {\n      this.setState({\n        filterKey: filterRadio\n      });\n    };\n\n    this.needClear = state => {\n      return state.todos.filter(item => item.completed).length > 0;\n    };\n\n    this.clearCompleted = () => {\n      this.setState(state => {\n        const todos = state.todos.filter(todo => !todo.completed);\n        return {\n          todos\n        };\n      });\n    };\n\n    this.state = {\n      newId: 3,\n      currentTitle: \"\",\n      filterKey: FILTER_STATUS.ALL,\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n  }\n\n  render() {\n    const allInfo = `${FILTER_STATUS.ALL} items:${this.state.todos.length}`;\n    const notAllInfo = this.state.filterKey === FILTER_STATUS.ALL ? \"\" : `${this.state.filterKey} items:${this.handleTodosByFilterKey.length}`;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"todo-list-frame\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        className: \"add-item-area\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"tick-label\",\n        onClick: this.handleToggleAllItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"far fa-circle\",\n        style: {\n          display: this.isAllCompleted(this.state) ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fas fa-check\",\n        style: {\n          display: this.isAllCompleted(this.state) ? \"block\" : \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        className: \"add-item-input\",\n        value: this.state.currentTitle,\n        onChange: this.handleChange,\n        placeholder: \"enter to add a todolist\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      })), this.handleTodosByFilterKey.map(todo =>\n      /*#__PURE__*/\n      React.createElement(TodoItem, {\n        key: todo.id,\n        todo: todo,\n        handleDelete: () => this.handleDelete(todo.id),\n        handleEditEnter: this.handleEditEnter,\n        handleChangeCompletedStatus: () => this.handleChangeCompletedStatus(todo.completed, todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"filter-item-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"remaining-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, allInfo, notAllInfo),\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"filter-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, filterRadios.map((filterRadio, index) => {\n        return (\n          /*#__PURE__*/\n          React.createElement(\"li\", {\n            className: \"filter-li\",\n            style: {\n              filterd: this.state.filterKey === filterRadio\n            },\n            key: index,\n            value: filterRadio,\n            onClick: () => this.handleChangeFilterKey(filterRadio),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }\n          }, filterRadio)\n        );\n      })),\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"clear-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        className: \"clear-li\",\n        style: {\n          visibility: this.needClear(this.state) ? \"visible\" : \"hidden\"\n        },\n        onClick: this.clearCompleted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, \"clear completed\"))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/jessie/workspace/todo-list-js/react-app-test/src/TodoList.js"],"names":["React","TodoItem","FILTER_STATUS","ALL","UNCOMPLETED","COMPLETED","filterRadios","Object","values","TodoList","Component","constructor","props","handleChange","event","preventDefault","setState","currentTitle","target","value","handleSubmit","state","todos","id","newId","title","completed","editing","handleEditEnter","currentValue","map","item","isAllCompleted","filter","length","handleToggleAllItems","handleChangeCompletedStatus","currentCompletedStatus","handleDelete","handleTodosByFilterKey","filterKey","isFilterCompleted","todo","handleChangeFilterKey","filterRadio","needClear","clearCompleted","render","allInfo","notAllInfo","display","index","filterd","visibility"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport const FILTER_STATUS = {\n  ALL: \"all\",\n  UNCOMPLETED: \"uncompleted\",\n  COMPLETED: \"completed\"\n};\n\nexport const filterRadios = Object.values(FILTER_STATUS);\n\nexport class TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newId: 3,\n      currentTitle: \"\",\n      filterKey: FILTER_STATUS.ALL,\n      todos: [\n        {\n          id: 1,\n          title: \"this is \bthe first example, double click to edit it\",\n          completed: false,\n          editing: false\n        },\n        {\n          id: 2,\n          title: \"this is \bthe second example, double click to edit it\",\n          completed: false,\n          editing: false\n        }\n      ]\n    };\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    this.setState({ currentTitle: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }\n      ],\n      newId: state.newId + 1,\n      currentTitle: \"\"\n    }));\n  };\n\n  handleEditEnter = (currentValue, id) => {\n    this.setState(state => {\n      const todos = state.todos.map(item => {\n        return { ...item, title: item.id === id ? currentValue : item.title };\n      });\n      return { todos };\n    });\n  };\n\n  isAllCompleted = state => {\n    return state.todos.filter(item => !item.completed).length === 0;\n  };\n\n  handleToggleAllItems = () => {\n    this.setState(state => {\n      const todos = state.todos.map(item => {\n        return {\n          ...item,\n          completed:\n            state.todos.filter(item => !item.completed).length === 0\n              ? false\n              : true\n        };\n      });\n      return { todos };\n    });\n  };\n\n  handleChangeCompletedStatus = (currentCompletedStatus, id) => {\n    this.setState(state => {\n      const todos = state.todos.map(item => {\n        return {\n          ...item,\n          completed: item.id === id ? !currentCompletedStatus : item.completed\n        };\n      });\n      return { todos };\n    });\n  };\n\n  handleDelete = id => {\n    this.setState(state => ({\n      todos: state.todos.filter(item => item.id !== id)\n    }));\n  };\n\n  //handleTodosByFilterKey = () => {\n  //  const isFitlerCompleted = this.state.filterKey === FILTER_STATUS.COMPLETED;\n  //  console.log(isFitlerCompleted);\n  //  return this.state.filterKey === FILTER_STATUS.ALL\n  //    ? this.state.todos\n  //    : this.state.todos.filter(todo => todo.completed === isFitlerCompleted);\n  //};\n\n  handleTodosByFilterKey = filterKey => {\n    const isFilterCompleted = filterKey === FILTER_STATUS.COMPLETED;\n    return filterKey === FILTER_STATUS.ALL\n      ? this.state.todos\n      : this.state.todos.filter(todo => todo.completed === isFilterCompleted);\n  };\n\n  handleChangeFilterKey = filterRadio => {\n    this.setState({ filterKey: filterRadio });\n  };\n\n  needClear = state => {\n    return state.todos.filter(item => item.completed).length > 0;\n  };\n\n  clearCompleted = () => {\n    this.setState(state => {\n      const todos = state.todos.filter(todo => !todo.completed);\n      return { todos };\n    });\n  };\n\n  render() {\n    const allInfo = `${FILTER_STATUS.ALL} items:${this.state.todos.length}`;\n    const notAllInfo =\n      this.state.filterKey === FILTER_STATUS.ALL\n        ? \"\"\n        : `${this.state.filterKey} items:${this.handleTodosByFilterKey.length}`;\n    return (\n      <div className=\"todo-list-frame\">\n        <form className=\"add-item-area\" onSubmit={this.handleSubmit}>\n          <label className=\"tick-label\" onClick={this.handleToggleAllItems}>\n            <i\n              className=\"far fa-circle\"\n              style={{\n                display: this.isAllCompleted(this.state) ? \"none\" : \"block\"\n              }}\n            ></i>\n            <i\n              className=\"fas fa-check\"\n              style={{\n                display: this.isAllCompleted(this.state) ? \"block\" : \"none\"\n              }}\n            ></i>\n          </label>\n          <input\n            type=\"text\"\n            className=\"add-item-input\"\n            value={this.state.currentTitle}\n            onChange={this.handleChange}\n            placeholder=\"enter to add a todolist\"\n            required\n          />\n        </form>\n        {this.handleTodosByFilterKey.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDelete={() => this.handleDelete(todo.id)}\n            handleEditEnter={this.handleEditEnter}\n            handleChangeCompletedStatus={() =>\n              this.handleChangeCompletedStatus(todo.completed, todo.id)\n            }\n          />\n        ))}\n        <div className=\"filter-item-area\">\n          <span className=\"remaining-span\">\n            {allInfo}\n            {notAllInfo}\n          </span>\n          <span className=\"filter-span\">\n            {filterRadios.map((filterRadio, index) => {\n              return (\n                <li\n                  className=\"filter-li\"\n                  style={{ filterd: this.state.filterKey === filterRadio }}\n                  key={index}\n                  value={filterRadio}\n                  onClick={() => this.handleChangeFilterKey(filterRadio)}\n                >\n                  {filterRadio}\n                </li>\n              );\n            })}\n          </span>\n          <span className=\"clear-span\">\n            <li\n              className=\"clear-li\"\n              style={{\n                visibility: this.needClear(this.state) ? \"visible\" : \"hidden\"\n              }}\n              onClick={this.clearCompleted}\n            >\n              clear completed\n            </li>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}