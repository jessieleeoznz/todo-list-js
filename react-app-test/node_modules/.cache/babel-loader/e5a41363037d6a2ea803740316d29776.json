{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/react-app-test/src/TodoList.js\";\nimport React from \"react\";\nimport { TodoItem } from \"./TodoItem\";\n\nclass AddandList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.currentTitle);\n      this.setState(state => ({\n        todos: [...state.todos, {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }],\n        newId: state.newId + 1,\n        currentTitle: \"\"\n      }));\n    };\n\n    this.handleEditEnter = (currentValue, id) => this.setState(state => {\n      state.todos.map(item => item.id === id ? item.title = currentValue : item);\n    });\n\n    this.isAllCompleted = state => {\n      return state.todos.filter(item => !item.completed).length === 0;\n    };\n\n    this.handleToggleAllItems = () => this.setState(state => {\n      this.isAllCompleted ? state.todos.map(item => !item.completed) : state.todos.map(item => {\n        item.completed = true;\n      });\n    });\n\n    this.handleChangeCompletedStatus = (currentCompletedStatus, id) => this.setState(state => {\n      state.todos.map(item => item.id === id ? item.completed = !currentCompletedStatus : item);\n    });\n\n    this.state = {\n      newId: 3,\n      currentTitle: \"\",\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"todo-list-frame\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"form\", {\n        className: \"add-item-area\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"label\", {\n        className: \"tick-label\",\n        onClick: this.handleToggleAllItems,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        class: \"far fa-circle\",\n        style: {\n          display: this.isAllCompleted ? \"none\" : \"block\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        class: \"fas fa-check\",\n        style: {\n          display: this.isAllCompleted ? \"block\" : \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"input\", {\n        type: \"text\",\n        className: \"add-item-area\",\n        value: this.state.currentTitle,\n        onChange: event => this.setState({\n          currentTitle: event.target.value\n        }),\n        placeholder: \"enter to add a todolist\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      })),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, this.state.todos.map(todo =>\n      /*#__PURE__*/\n      React.createElement(TodoItem, {\n        todo: todo,\n        handleDelete: () => this.setState(state => ({\n          todos: state.todos.filter(item => item.id !== todo.id)\n        })),\n        handleEditEnter: this.handleEditEnter,\n        isAllCompleted: this.isAllCompleted,\n        handleChangeCompletedStatus: this.handleChangeCompletedStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }))))\n    );\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"main-frame\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(AddandList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }))\n    );\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jessie/workspace/react-app-test/src/TodoList.js"],"names":["React","TodoItem","AddandList","Component","constructor","props","handleSubmit","event","preventDefault","console","log","state","currentTitle","setState","todos","id","newId","title","completed","editing","handleEditEnter","currentValue","map","item","isAllCompleted","filter","length","handleToggleAllItems","handleChangeCompletedStatus","currentCompletedStatus","render","display","target","value","todo","TodoList"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { TodoItem } from \"./TodoItem\";\n\nclass AddandList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newId: 3,\n      currentTitle: \"\",\n      todos: [\n        {\n          id: 1,\n          title: \"this is \bthe first example, double click to edit it\",\n          completed: false,\n          editing: false\n        },\n        {\n          id: 2,\n          title: \"this is \bthe second example, double click to edit it\",\n          completed: false,\n          editing: false\n        }\n      ]\n    };\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(this.state.currentTitle);\n    this.setState(state => ({\n      todos: [\n        ...state.todos,\n        {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }\n      ],\n      newId: state.newId + 1,\n      currentTitle: \"\"\n    }));\n  };\n  handleEditEnter = (currentValue, id) =>\n    this.setState(state => {\n      state.todos.map(item =>\n        item.id === id ? (item.title = currentValue) : item\n      );\n    });\n  isAllCompleted = state => {\n    return state.todos.filter(item => !item.completed).length === 0;\n  };\n  handleToggleAllItems = () =>\n    this.setState(state => {\n      this.isAllCompleted\n        ? state.todos.map(item => !item.completed)\n        : state.todos.map(item => {\n            item.completed = true;\n          });\n    });\n  handleChangeCompletedStatus = (currentCompletedStatus, id) =>\n    this.setState(state => {\n      state.todos.map(item =>\n        item.id === id ? (item.completed = !currentCompletedStatus) : item\n      );\n    });\n  render() {\n    return (\n      <div className=\"todo-list-frame\">\n        <form className=\"add-item-area\" onSubmit={this.handleSubmit}>\n          <label className=\"tick-label\" onClick={this.handleToggleAllItems}>\n            <i\n              class=\"far fa-circle\"\n              style={{ display: this.isAllCompleted ? \"none\" : \"block\" }}\n            ></i>\n            <i\n              class=\"fas fa-check\"\n              style={{ display: this.isAllCompleted ? \"block\" : \"none\" }}\n            ></i>\n          </label>\n          <input\n            type=\"text\"\n            className=\"add-item-area\"\n            value={this.state.currentTitle}\n            onChange={event =>\n              this.setState({ currentTitle: event.target.value })\n            }\n            placeholder=\"enter to add a todolist\"\n            required\n          />\n        </form>\n        <div>\n          {this.state.todos.map(todo => (\n            <TodoItem\n              todo={todo}\n              handleDelete={() =>\n                this.setState(state => ({\n                  todos: state.todos.filter(item => item.id !== todo.id)\n                }))\n              }\n              handleEditEnter={this.handleEditEnter}\n              isAllCompleted={this.isAllCompleted}\n              handleChangeCompletedStatus={this.handleChangeCompletedStatus}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <div className=\"main-frame\">\n        <AddandList />\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}