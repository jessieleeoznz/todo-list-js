{"ast":null,"code":"var _jsxFileName = \"/Users/jessie/workspace/react-app-test/src/TodoList.js\";\nimport React, { Component } from 'react';\n\nclass AddandList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state.currentTitle);\n      this.setState(state => ({\n        todos: [...state.todos, {\n          id: this.state.newId,\n          title: this.state.currentTitle,\n          completed: false,\n          editing: false\n        }],\n        newId: state.newId + 1,\n        currentTitle: ''\n      }));\n    };\n\n    this.handleEditEnter = (currentValue, id) => this.setState(state => {\n      state.todos.map(item => item.id === id ? item.title = currentValue : item);\n    });\n\n    this.isAllCompleted = state => {\n      return state.todos.filter(item => !item.completed).length === 0;\n    };\n\n    this.handleChangeCompletedStatus = id => this.setState(state => {\n      var stateTodo = state.todos.find(item => item.id === id);\n      stateTodo.completed = !stateTodo.completed;\n    });\n\n    this.state = {\n      newId: 3,\n      currentTitle: '',\n      todos: [{\n        id: 1,\n        title: \"this is \bthe first example, double click to edit it\",\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: \"this is \bthe second example, double click to edit it\",\n        completed: false,\n        editing: false\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todo-list-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"add-item-area\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"add-item-area\",\n      value: this.state.currentTitle,\n      onChange: event => this.setState({\n        currentTitle: event.target.value\n      }),\n      placeholder: \"enter to add a todolist\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.todos.map(todo => React.createElement(TodoItem, {\n      todo: todo,\n      handleDelete: () => this.setState(state => ({\n        todos: state.todos.filter(item => item.id !== todo.id)\n      })),\n      handleEditEnter: this.handleEditEnter,\n      isAllCompleted: this.isAllCompleted,\n      handleChangeCompletedStatus: this.handleChangeCompletedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        currentValue: event.target.value\n      });\n    };\n\n    this.state = {\n      currentId: '',\n      currentValue: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todo-item\",\n      key: this.props.todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"tick-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-circle\",\n      style: {\n        display: this.props.isAllCompleted ? 'none' : 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      style: {\n        display: this.props.isAllCompleted ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      className: \"todo-item-checkbox-input\",\n      type: \"checkbox\",\n      checked: this.props.todo.completed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \" \", this.state.currentId === this.props.todo.id ? React.createElement(\"input\", {\n      type: \"text\",\n      className: \"todo-item-input\",\n      value: this.state.currentValue,\n      onChange: this.handleChange,\n      onKeyPress: event => {\n        if (event.key === 'Enter') {\n          this.props.handleEditEnter(this.state.currentValue, this.props.todo.id);\n          this.setState({\n            currentId: -1\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : React.createElement(\"label\", {\n      className: \"todo-item-text\",\n      onDoubleClick: event => {\n        event.preventDefault();\n        this.setState({\n          currentId: this.props.todo.id,\n          currentValue: this.props.todo.title\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.todo.title, React.createElement(\"label\", {\n      onClick: this.props.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" x\")));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(AddandList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/jessie/workspace/react-app-test/src/TodoList.js"],"names":["React","Component","AddandList","constructor","props","handleSubmit","event","preventDefault","console","log","state","currentTitle","setState","todos","id","newId","title","completed","editing","handleEditEnter","currentValue","map","item","isAllCompleted","filter","length","handleChangeCompletedStatus","stateTodo","find","render","target","value","todo","TodoItem","handleChange","currentId","display","key","handleDelete","TodoList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass AddandList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newId: 3,\n            currentTitle: '',\n            todos: [\n                {\n                    id: 1,\n                    title: \"this is \bthe first example, double click to edit it\",\n                    completed: false,\n                    editing: false,\n                },\n                {\n                    id: 2,\n                    title: \"this is \bthe second example, double click to edit it\",\n                    completed: false,\n                    editing: false,\n                },\n            ]\n        };\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state.currentTitle);\n        this.setState(state => ({\n            todos:\n                [...state.todos, {\n                    id: this.state.newId,\n                    title: this.state.currentTitle,\n                    completed: false,\n                    editing: false\n                }],\n            newId: state.newId + 1,\n            currentTitle: '',\n        }));\n    };\n    handleEditEnter = (currentValue, id) => this.setState(state => {\n        state.todos.map(item => item.id === id ? item.title = currentValue : item)\n    });\n    isAllCompleted = (state) => {\n        return state.todos.filter(item => !item.completed).length === 0;\n    };\n    handleChangeCompletedStatus = (id) => this.setState(state => {\n        var stateTodo = state.todos.find(item => item.id === id);\n        stateTodo.completed = !stateTodo.completed;\n    });\n    render() {\n        return (\n            <div className=\"todo-list-frame\">\n                <form className=\"add-item-area\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\"\n                        className=\"add-item-area\"\n                        value={this.state.currentTitle}\n                        onChange={event =>\n                            this.setState(\n                                { currentTitle: event.target.value }\n                            )\n                        }\n                        placeholder=\"enter to add a todolist\"\n                        required\n                    />\n                </form>\n                <div>{this.state.todos.map(todo => (<TodoItem todo={todo} handleDelete={() => this.setState(state => ({ todos: state.todos.filter(item => item.id !== todo.id) }))} handleEditEnter={this.handleEditEnter} isAllCompleted={this.isAllCompleted} handleChangeCompletedStatus={this.handleChangeCompletedStatus} />))}</div>\n            </div >);\n    }\n}\n\nclass TodoItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentId: '',\n            currentValue: ''\n        }\n    }\n    handleChange = (event) => {\n        this.setState({ currentValue: event.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"todo-item\" key={this.props.todo.id} ><label className=\"tick-label\"><i className=\"far fa-circle\" style={{ display: this.props.isAllCompleted ? 'none' : 'block' }}></i><i className=\"fas fa-check\" style={{ display: this.props.isAllCompleted ? 'block' : 'none' }}></i></label ><input className=\"todo-item-checkbox-input\" type=\"checkbox\" checked={this.props.todo.completed} /> {(this.state.currentId === this.props.todo.id) ? <input type=\"text\" className=\"todo-item-input\" value={this.state.currentValue} onChange={this.handleChange} onKeyPress={event => { if (event.key === 'Enter') { this.props.handleEditEnter(this.state.currentValue, this.props.todo.id); this.setState({ currentId: -1 }) } }} /> : <label className=\"todo-item-text\" onDoubleClick={event => { event.preventDefault(); this.setState({ currentId: this.props.todo.id, currentValue: this.props.todo.title }) }}>{this.props.todo.title}<label onClick={this.props.handleDelete}> x</label></label>\n            }</div >\n        );\n    }\n}\n\nclass TodoList extends React.Component {\n    render() {\n        return (\n            <div className=\"main-frame\">\n                <AddandList />\n            </div>\n        )\n    }\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}